{"version":3,"sources":["../src/utils/datavalidator/datavalidator.js","../src/api/chartyinit.js","../src/api/chartynames.js","../src/components/scales/basescale.js","../src/components/scales/linearscale.js","../src/components/scales/ordinalscale.js","../src/components/scales/peakvalleylinearscale.js","../src/components/scales/scalesfactory.js","../src/composition/datamapper/datamapper.js","../src/components/base/basechart.js","../src/composition/simpledatagroup.js","../src/components/axis/axis.js","../src/components/bar/bar.js","../src/components/bar/horizontalbar.js","../src/components/bar/winlossbar.js","../src/components/circle/circle.js","../src/components/donut/donut.js","../src/components/line/line.js","../src/components/roundedrectangle/roundedrectangle.js","../src/components/text/text.js","../src/components/text/abovetext.js","../src/components/text/righttext.js","../src/components/text/winlosstext.js","../src/components/text/labeledtext.js","../src/components/triangle/triangle.js","../src/composition/multipledatagroup.js","../src/composition/multipleinstancesmixin.js","../src/composition/axis/xyaxis.js","../src/composition/axis/yxyaxis.js","../src/composition/barchart/barchart.js","../src/composition/groupedbarchart/groupedbarchart.js","../src/composition/donutwithinnertext/donutwithinnertext.js","../src/composition/labeledtrianglechart/labeledtrianglechart.js","../src/composition/linechart/linechart.js","../src/composition/linechart/linechartcircles.js","../src/composition/scatterplot/scatterplot.js","../src/utils/accessor/accessor.js","../src/utils/events/functionevent.js","../src/utils/events/bootstrapevent.js","../src/utils/events/eventfactory.js","../src/utils/events/eventmanager.js","../src/api/chartinterface.js","../src/api/charty.js"],"names":[],"mappings":"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","file":"charty.js","sourcesContent":["/**\n * Data checker for different data input\n *\n * @class DataValidator\n * @requires d3,\n *           underscore\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/datavalidator', [\n                'd3',\n                'underscore'\n            ],\n            function(d3, _) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(_);\n            });\n    } else {\n        /** Browser globals */\n        root.DataValidator = factory(_);\n    }\n}(this, function(_) {\n\n    /** \n     * Class constructor\n     *\n     * @constructor\n     */\n    function DataValidator() {}\n\n    /**\n     * Checks if a given value is defined and > 0\n     *\n     * @method isPositiveNumber\n     * @param {Number} value number to check\n     * @param {String} message error message to show\n     * @return {Number} value\n     */\n    DataValidator.prototype.isPositiveNumber = function(value, message) {\n        if (!_.isUndefined(value) && (!_.isNumber(value) || value < 0)) {\n            throw new Error(message);\n        }\n        return value;\n    };\n\n    /**\n     * Checks if value is number, or is defined\n     *\n     * @method isNumber\n     * @param {Number} value to check\n     * @param {String} error message\n     * @return {Number} value\n     */\n    DataValidator.prototype.isNumber = function(value, message) {\n        if (!_.isUndefined(value) && !_.isNumber(value)) {\n            throw new Error(message);\n        }\n        return value;\n    };\n\n    /**\n     * Checks if a value is defined\n     *\n     * @method isUndefined\n     * @param {Number} value to check\n     * @param {String} message error message\n     * @return {Number} value\n     */\n    DataValidator.prototype.isUndefined = function(value, message) {\n        if (_.isUndefined(value)) {\n            throw new Error(message);\n        }\n        return value;\n    };\n\n    return DataValidator;\n}));\n","/**\n * Api init for chart creation management.\n *\n *\n * @class ChartsApi\n * @constructor\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/chartyinit',\n            function() {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory();\n            });\n    } else {\n        /** Browser globals */\n        root.Charty = factory();\n    }\n}(this, function() {\n\n    var Charty = {};\n\n    return Charty;\n}));\n","/**\n * Define constants that will be used as names for different parts\n *\n * @class ChartNames\n * @requires chartyinit\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/chartynames', [\n                'charty/chartyinit'\n            ],\n            function(Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(Charty);\n            });\n    } else {\n        /** Browser globals */\n        root.Charty = factory(Charty);\n    }\n}(this, function(Charty) {\n\n    /** Chart / Components / Compositions names */\n    Charty.CHART_NAMES = {\n        AXIS: 'Axis',\n        BAR: 'Bar',\n        HORIZONTAL_BAR: 'HorizontalBar',\n        WIN_LOSS_BAR: 'WinLossBar',\n        BASE_CHART: 'BaseChart',\n        CIRCLE: 'Circle',\n        DONUT: 'Donut',\n        LINE: 'Line',\n        ROUNDED_RECTANGLE: 'RoundedRectangle',\n        TEXT: 'Text',\n        ABOVE_TEXT: 'AboveText',\n        RIGHT_TEXT: 'RightText',\n        WIN_LOSS_TEXT: 'WinLossText',\n        TRIANGLE: 'Triangle',\n        XY_AXIS: 'XYAxis',\n        YXY_AXIS: 'YXYAxis',\n        BAR_CHART: 'BarChart',\n        LABELED_TRIANGLE_CHART: 'LabeledTriangleChart',\n        SCATTERPLOT: 'Scatterplot',\n        MULTIPLE_DATA_GROUP: 'MultipleDataGroup',\n        MULTIPLE_INSTANCES_MIXIN: 'MultipleInstancesMixin',\n        SIMPLE_DATA_GROUP: 'SimpleDataGroup',\n        DONUT_INNER_TEXT: 'DonutWithInnerText',\n        GROUPED_BAR_CHART: 'GroupedBarChart',\n        LINE_CHART: 'LineChart',\n        LINE_CHART_CIRCLES: 'LineChartCircles',\n        LABELED_TEXT: 'LabeledText'\n    };\n\n    /**\n     * Axis types are defined as constants\n     *\n     * Related to scaling.\n     */\n    Charty.AXIS_TYPE = {\n        ORDINAL: 'ordinal',\n        LINEAR: 'linear',\n        PEAK_VALLEY_LINEAR: 'peakValleyLinear'\n    };\n\n    /**\n     * Axis defined as constants\n     */\n    Charty.AXIS = {\n        X: 'x',\n        Y: 'y'\n    };\n\n    return Charty;\n}));\n","/**\n * Defines common scale functionality. Used as base element for inheritance.\n *\n * @class BaseScale\n * @requires d3.chart, charty\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/basescale', [\n                'd3.chart',\n                'charty/chartynames'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 *  is loaded with others */\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        root.BaseScale = factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n\n    /**\n     * Class constructor\n     *\n     * @constructor\n     */\n    var BaseScale = function() {};\n\n    /**\n     *  Returns the contained scale.\n     *\n     *  @method getScale\n     *  @return {Object} d3.scale Linear / Ordinal scale\n     */\n    BaseScale.prototype.getScale = function() {\n        return this.scale;\n    };\n\n    /**\n     *  Generates range value for a scale.\n     *\n     *  @method generateRange\n     *  @param {Number} range value for the range\n     *  @return {Number} generated range value\n     */\n    BaseScale.prototype.generateRange = function(range) {\n        var r;\n\n        if (this.axisType === Charty.AXIS.X) {\n            r = [0, range];\n        } else {\n            if (this.axisType === Charty.AXIS.Y) {\n                r = [range, 0];\n            } else {\n                throw new Error('No range was defined for this scale.');\n            }\n        }\n\n        return r;\n    };\n\n    return BaseScale;\n}));\n","/* global BaseScale: true */\n/**\n * Linear scale for linear axis\n *\n * @class LinearScale\n * @extends BaseScale\n * @requires d3.chart,\n *           basescale,\n *           uderscore\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/linearscale', [\n                'd3.chart',\n                'charty/basescale',\n                'underscore'\n            ],\n            function(d3, BaseScale, _) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, BaseScale, _);\n            });\n    } else {\n        /** Browser globals */\n        root.LinearScale = factory(d3, BaseScale, _);\n    }\n}(this, function(d3, BaseScale, _) {\n\n    /**\n     * @constructor\n     *\n     * @param {Charty.AXIS.X|Charty.AXIS.Y} axisType - X or Y axis setting.\n     * @param {Object} [options] - Settings\n     *     @param {Boolean} [options.niceDomain=false] - Beautify the domain to include all the possible values.\n     */\n    var LinearScale = function(axisType, options) {\n        this.scale = d3.scale.linear();\n        this.axisType = axisType;\n        this.niceDomain = options && options.niceDomain || false;\n    };\n\n    /**\n     * Inheritance from BaseScale\n     */\n    LinearScale.prototype = new BaseScale();\n\n    /**\n     * Sets domain for linear scale\n     *\n     * @method setDomain\n     * @param {Object} arrayValues Max and min value defined by array\n     * @chainable\n     */\n    LinearScale.prototype.setDomain = function(arrayValues) {\n        return this.scale.domain(arrayValues).nice(), this;\n    };\n\n    /**\n     * Sets the range for the linear scale\n     *\n     * @method setRange\n     * @param {Number} range numeric value for linear scale\n     * @chainable\n     */\n    LinearScale.prototype.setRange = function(range) {\n        return this.scale.range(this.generateRange(range)), this;\n    };\n\n    /**\n     * Returns scaled value\n     *\n     * @method map\n     * @param {Number} value number to map to scale\n     * @return {Number} mapped value\n     */\n    LinearScale.prototype.map = function(value) {\n        return this.scale(value);\n    };\n\n    /**\n     * Returns band for a specified value\n     *\n     * @method band\n     * @param {Number} max max value for a scale\n     * @param {Number} value to map\n     * @return {Number} similar to ordinal band but for\n     * linear scale\n     */\n    LinearScale.prototype.band = function(max, value) {\n        return (max - this.scale(value));\n    };\n\n    /**\n     * Calculates the domain for the linear scale\n     *\n     * Data probably won't be uniform, so for each data element,\n     * a maximum value is obtained. The maximum element will be kept.\n     * Same situation is for the minimum element\n     *\n     * Keeps a reference for the minimum value\n     *\n     * @method calculateDomain\n     * @param {Object} data Accessor for the data collection\n     * @param {Object} iterator callback function\n     * @chainable\n     */\n    LinearScale.prototype.calculateDomain = function(data, iterator) {\n        var max = -Infinity,\n            min = Infinity,\n            d = data.getData(),\n            delta = 0;\n\n        if (d && !_.isEmpty(d)) {\n\n            _.each(d, function(element) {\n                var chartData = element.data;\n\n                /** Chart can receive no data, should draw nothing or remove already drawn elements */\n                if (chartData && !_.isEmpty(chartData)) {\n                    var maxg = d3.max(chartData, iterator),\n                        ming = d3.min(chartData, iterator);\n\n                    max = Math.max(maxg, max);\n                    min = Math.min(ming, min);\n                }\n            }, this);\n\n            if (this.niceDomain) {\n                delta = this.getDelta(max, min);\n                // If no negative values exist, don't use the delta on the min value.\n                min = min >= 0 ? min : min - delta;\n\n                // If no positive values exist, set the delta to 0.\n                delta = max <= 0 ? 0 : delta;\n            }\n\n            /** Case when there is no data, sometimes can receive a NaN */\n            if (!_.isNaN(max) && !_.isNaN(min)) {\n                return this.setMaxValue(max)\n                    .setDomain([Math.min(0, min), Math.max(0, max + delta)]);\n            }\n\n        }\n    };\n\n    /**\n     * Returns the delta value to add to the domain in order to make sure all the\n     * data is wrapped by axis ticks.\n     *\n     * @method getDelta\n     * @param {Number} max The maximum value\n     * @param {Number} min The minimum value\n     * @return {Number} The delta value calculated on a 10 step division.\n     */\n    LinearScale.prototype.getDelta = function(max, min) {\n        var step = (max - min) / 10 + 1;\n        return Math.abs(max - min) % step;\n    };\n\n    /**\n     * Maximum value setting for linear scale.\n     * Useful when setting discrete ticks for continuous scale\n     *\n     * @method setMaxValue\n     * @param {Number} maxVal Scale's maximum value\n     * @chainable\n     */\n    LinearScale.prototype.setMaxValue = function(maxVal) {\n        this.maxValue = maxVal;\n        return this;\n    };\n\n    /**\n     * Returns max value\n     *\n     * @method getMaxValue\n     * @return {Number} scale's maximum value\n     */\n    LinearScale.prototype.getMaxValue = function() {\n        return this.maxValue;\n    };\n\n    return LinearScale;\n}));\n","/* global BaseScale: true */\n/**\n * Ordinal Scale\n *\n * @class OrdinalScale\n * @extends BaseScale\n * @requires d3.chart, basescale\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/ordinalscale', [\n                'd3.chart',\n                'charty/basescale',\n            ],\n            function(d3, BaseScale) {\n                /** Export global even in AMD case in case this script\n                 *  is loaded with others */\n                return factory(d3, BaseScale);\n            });\n    } else {\n        /** Browser globals */\n        root.OrdinalScale = factory(d3, BaseScale);\n    }\n}(this, function(d3, BaseScale) {\n    /**\n     * @constructor\n     *\n     * @param {Charty.AXIS.X|Charty.AXIS.Y} axisType - X or Y axis setting.\n     * @param {Object} [options] - Settings\n     *     @param {Number} [options.spacing=.1] - Spacing between bars.\n     */\n    var OrdinalScale = function(axisType, options) {\n        this.scale = d3.scale.ordinal();\n        this.axisType = axisType;\n        this.spacing = options && options.spacing || 0.1;\n    };\n\n    /**\n     *  Inheritance from BaseScale\n     */\n    OrdinalScale.prototype = new BaseScale();\n\n    /**\n     *  Sets the domain data for the scale\n     *\n     *  @method setDomain\n     *  @param {Array} domain values for ordinal domain\n     *  @chainable\n     */\n    OrdinalScale.prototype.setDomain = function(domain) {\n        return this.scale = this.scale.domain(domain), this;\n    };\n\n    /**\n     *  Sets the range for the scale\n     *\n     *  @method setRange\n     *  @param {Number} range numeric value for the range\n     *  @chainable\n     */\n    OrdinalScale.prototype.setRange = function(range) {\n        return this.scale = this.scale.rangeRoundBands(this.generateRange(range), this.spacing), this;\n    };\n\n    /**\n     *  Maps a value to the current scaling\n     *  Since ordinal scales computes a band width\n     *  A value needs to be mapped and moved according\n     *  to that band width\n     *\n     *  @method map\n     *  @param {String} value String value that belongs to the domain\n     *  @param {Number} factor reduce factor for overlapping charts\n     *  @return {Number} mapped String value\n     */\n    OrdinalScale.prototype.map = function(value, factor) {\n        return (this.scale(value) + ((this.scale.rangeBand() - (this.scale.rangeBand() * factor)) / 2));\n    };\n\n    /**\n     *  Returns the range band for the scale\n     *  Can be reduced if (factor < 1)\n     *\n     *  @method band\n     *  @param {Number} factor reduce factor\n     *  @return {Number} scale width\n     */\n    OrdinalScale.prototype.band = function(factor) {\n        return (this.scale.rangeBand() * factor);\n    };\n\n    /**\n     *  Calculates the scale domain, based on a data collection and a\n     *  callback function\n     *  Regarding the data series, ordinal scales should be uniform, whether\n     *  they have values for that specific ordinal element or not.\n     *\n     *  @method calculateDomain\n     *  @param {Object} data Accessor for the data collection\n     *  @param {Object} f callback function\n     *  @chainable\n     */\n    OrdinalScale.prototype.calculateDomain = function(data, f) {\n        return this.setDomain(data.first().data.map(f));\n    };\n\n    /**\n     *  Checks if domain wasn't previously calculated\n     *\n     *  @method defaultDomain\n     *  @return {Boolean} True if domain isn't set\n     */\n    OrdinalScale.prototype.defaultDomain = function() {\n        return this.scale.domain().length === 0;\n    };\n\n    return OrdinalScale;\n}));\n","/*global LinearScale: true*/\n/**\n * Peak Valley scale for linear axis\n *\n * @class PeakValleyLinearScale\n * @extends BaseScale\n * @requires d3.chart, linearscale, charty, underscore\n *\n * @author \"Cesar Del Soldato <cesards@gmail.com>\"\n */\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/peakvalleylinearscale', [\n                'd3.chart',\n                'charty/linearscale',\n                'charty/chartynames',\n                'underscore'\n            ],\n            function(d3, LinearScale, Charty, _) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, LinearScale, Charty, _);\n            });\n    } else {\n        /** Browser globals */\n        root.PeakValleyLinearScale = factory(d3, LinearScale, Charty, _);\n    }\n}(this, function(d3, LinearScale, Charty, _) {\n    /**\n     * @constructor\n     *\n     * @param {Charty.AXIS.X|Charty.AXIS.Y} axisType - X or Y axis setting.\n     * @param {Object} [options] - Settings\n     *     @param {Boolean} [options.niceDomain=false] - Beautify the domain to include all the possible values.\n     */\n    var PeakValleyLinearScale = function() {\n        LinearScale.apply(this, arguments);\n    };\n\n    /**\n     * Inheritance from LinearScale\n     */\n    PeakValleyLinearScale.prototype = new LinearScale();\n\n    /**\n     * Calculates the domain for the peak valley linear scale\n     *\n     * The domain is calculated by adding all the data points one by one\n     * and keeping the highest and lowest value it reaches.\n     * It sets the domain and the maximum value.\n     *\n     * @method calculateDomain\n     * @chainable\n     * @param {Object} data Data collection.\n     * @param {Object} iterator Provide a way to access the data\n     */\n    PeakValleyLinearScale.prototype.calculateDomain = function(data, iterator) {\n        var max = 0,\n            valley = 0,\n            peak = 0,\n            series = data.getData(),\n            delta = 0;\n\n        if (series && !_.isEmpty(series)) {\n\n            _.each(series, function(element) {\n                var data = element.data,\n                    sum = 0;\n\n                // Chart can receive no data, should draw nothing or remove\n                // already drawn elements\n                if (data && !_.isEmpty(data)) {\n                    var maxg = d3.max(data, iterator);\n\n                    max = Math.max(maxg, max);\n\n                    // Max and Min after sum all the value from the serie.\n                    _.each(data, function(point) {\n                        if (point.reset) {\n                            sum = 0;\n                        }\n\n                        sum = iterator ? sum + iterator(point) : sum + point;\n\n                        if (sum > peak) {\n                            peak = sum;\n                        } else if (sum < valley) {\n                            valley = sum;\n                        }\n                    });\n                }\n            }, this);\n\n            if (this.niceDomain) {\n                delta = this.getDelta(peak, valley);\n\n                // If no positives are shown, don't use the delta on the peak.\n                peak = peak <= 0 ? peak : peak + delta;\n\n                // If no negatives are shown, don't use the delta on the valley.\n                valley = valley >= 0 ? valley : valley - delta;\n            }\n\n            // Case when there is no data, sometimes can receive a NaN\n            if (!_.isNaN(peak) && !_.isNaN(valley) && !_.isNaN(max)) {\n                return this.setMaxValue(max).setDomain([\n                    Math.min(0, valley),\n                    Math.max(0, peak)\n                ]);\n            }\n\n        }\n    };\n\n    return PeakValleyLinearScale;\n}));\n","/* global OrdinalScale: true, LinearScale: true, PeakValleyLinearScale: true */\n/**\n * Scale factory. Separation is provived in an attempt to provide an easy way\n * to switching scales in a defined chart.\n *\n * @class ScaleFactory\n * @requires d3.chart, charty, ordinalscale, linearscale, peakvalleylinearscale\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/scalesfactory', [\n                'charty/chartynames',\n                'charty/ordinalscale',\n                'charty/linearscale',\n                'charty/peakvalleylinearscale'\n            ],\n            function(Charty, OrdinalScale, LinearScale, PeakValleyLinearScale) {\n                /** Export global even in AMD case in case this script\n                 *  is loaded with others */\n                return factory(Charty, OrdinalScale, LinearScale, PeakValleyLinearScale);\n            });\n    } else {\n        /** Browser globals */\n        root.ScaleFactory = factory(Charty, OrdinalScale, LinearScale, PeakValleyLinearScale);\n    }\n}(this, function(Charty, OrdinalScale, LinearScale, PeakValleyLinearScale) {\n\n    /** @constructor */\n    function ScaleFactory() {}\n\n    /**\n     * Returns a specified scale object acording to a scale type.\n     *\n     * @method scale\n     *\n     * @param {String|Object} options      - List of possible options provided to the scale contructor.\n     *   @param {String}  options.name       - Scale type ID.\n     *   @param {Number}  options.spacing    - Define how much space we leave between bars (OrdinalScale)\n     *   @param {Boolean} options.niceDomain - Ask for a domain proccessing to include all values in the axis (LinearScale)\n     *\n     * @param {Charty.AXIS.X|Charty.AXIS.Y} axisType - X or Y axis setting.\n     *\n     * @return {Object} Scale instance.\n     */\n    ScaleFactory.prototype.scale = function(options, axisType) {\n        var type;\n\n        // Retro compatible for type as Strings, since version 0.5.11 we could\n        // send options to the scales to be able to configure the object.\n        if (_.isString(options)) {\n            type = options;\n            options = {};\n        } else {\n            type = options.name;\n        }\n\n        switch (type) {\n            case Charty.AXIS_TYPE.ORDINAL:\n                return new OrdinalScale(axisType, options);\n            case Charty.AXIS_TYPE.LINEAR:\n                return new LinearScale(axisType, options);\n            case Charty.AXIS_TYPE.PEAK_VALLEY_LINEAR:\n                return new PeakValleyLinearScale(axisType, options);\n            default:\n                throw new Error('Provide a value Charty.AXIS_TYPE value');\n        }\n    };\n\n    return ScaleFactory;\n}));\n","/*global LinearScale: true, OrdinalScale: true*/\n/**\n * Maps every data point, taking into account one to many\n * scales. Works as a scale composite object.\n *\n * It is possible to requiere more than one scale to map certain\n * elements, so this component will make the correct positioning.\n *\n * Each chart will have two mappers : one for horizontal axis and\n * other for vertical axis.\n *\n * @class DataMapper\n * @requires linearscale,\n *           basescale,\n *           underscore\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/datamapper', [\n                'charty/linearscale',\n                'charty/ordinalscale',\n                'underscore'\n            ],\n            function(LinearScale, OrdinalScale, _) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(LinearScale, OrdinalScale, _);\n            });\n    } else {\n        /** Browser globals */\n        root.DataMapper = factory(LinearScale, OrdinalScale, _);\n    }\n}(this, function(LinearScale, OrdinalScale, _) {\n\n    /**\n     * Class constructor\n     *\n     * @constructor\n     */\n    var DataMapper = function() {\n        this.scales = [];\n    };\n\n    /**\n     * Adds scale for mapping\n     *\n     * @method addScale\n     * @param {BaseScale} scale Scale to add\n     * @param {Boolean} setAsBase Defines a scale that will be taken as base\n     * @chainable\n     */\n    DataMapper.prototype.addScale = function(scale, setAsBase) {\n\n        this.baseScale = (setAsBase) ? scale : null;\n        this.scales.push(scale);\n    };\n\n    /**\n     * Returns the defined base scale.\n     *\n     * @method getBaseScale\n     * @returns {BaseScale} Base scale defined\n     */\n    DataMapper.prototype.getBaseScale = function() {\n\n        return this.baseScale;\n    };\n\n    /**\n     * Maps a data point, according to the defined scales\n     *\n     * @method map\n     * @param {Object} dataElement Data to be mapped\n     * @param {Number} chartFactor Factor that affects some chart's drawing\n     * @returns {Number} Data position in SVG canvas.\n     */\n    DataMapper.prototype.map = function(dataElement, chartFactor) {\n\n        /** Different scales adds some value to the final position */\n        var pos = 0;\n\n        _.each(this.scales, function(scale) {\n            pos += scale.map(dataElement, chartFactor);\n        });\n\n        return pos;\n    };\n\n    return DataMapper;\n\n}));\n","/**\n * Base class for charts\n * Contains common functionality\n *\n * @class BaseChart\n * @requires d3,\n *           underscore,\n *           d3.chart\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/basechart', [\n                'd3.chart',\n                'underscore',\n            ],\n            function(d3, _) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, _);\n            });\n    } else {\n        /** Browser globals */\n        return factory(d3, _);\n    }\n}(this, function(d3, _) {\n\n    d3.chart('BaseChart', {\n        /**\n         * Sets the width for the chart\n         * In case chart contains components, width will\n         * propagate to them\n         *\n         * @method width\n         * @param {Number} newWidth Width for the chart\n         * @chainable\n         */\n        width: function(newWidth) {\n\n            this.w = newWidth;\n            _.each(this._mixins, function(element) {\n                element.width(newWidth);\n            });\n\n            return this;\n        },\n        /**\n         * Sets the height for the chart. Propagates to\n         * components.\n         *\n         * @method height\n         * @param {Number} newHeight Height for the chart\n         */\n        height: function(newHeight) {\n\n            this.h = newHeight;\n            _.each(this._mixins, function(element) {\n                element.height(newHeight);\n            });\n\n            return this;\n        },\n        /**\n         * Sets the scale type for the x data mapping chart.\n         * Propagates to components\n         *\n         * Not all charts use scales. Some can use direct\n         * mapping.\n         *\n         * @method setXScale\n         * @param {Oject} LinearScale, OrdinalScale\n         * @chainable\n         */\n        setXScale: function(scale) {\n\n            this.xscale = scale;\n            _.each(this._mixins, function(element) {\n                element.setXScale(scale);\n            });\n\n            return this;\n        },\n        /**\n         * Sets the scale type for the y data mapping chart.\n         * Propagates to components.\n         *\n         * Not all charts use scales. Some can use direct\n         * mapping.\n         *\n         * @method setYScale\n         * @param {Oject} LinearScale, OrdinalScale\n         * @chainable\n         */\n        setYScale: function(scale) {\n\n            this.yscale = scale;\n            _.each(this._mixins, function(element) {\n                element.setYScale(scale);\n            });\n\n            return this;\n        },\n        /**\n         * Propagates the Event Manager to component parts.\n         *\n         * @method setEventManager\n         * @param {EventManager} evtManager Event Manager for chart.\n         * @chainable\n         */\n        setEventManager: function(evtManager) {\n            this.eventManager = evtManager;\n\n            _.each(this._mixins, function(mixin) {\n                if (mixin.setEventManager) {\n                    mixin.setEventManager(evtManager);\n                }\n            });\n\n            return this;\n        }\n    });\n}));\n","/**\n * Defines a basic chart to process individual data series\n *\n * @class SimpleDataGroup\n * @extends BaseChart\n * @requires d3.chart,\n *           charty,\n *           basechart\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/simpledatagroup', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/basechart'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n\n    d3.chart(Charty.CHART_NAMES.BASE_CHART)\n        .extend(Charty.CHART_NAMES.SIMPLE_DATA_GROUP, {\n            /**\n             * Returns the next element of the data collection\n             *\n             * @method transform\n             * @param {Object} data Data Accessor\n             * @return {Object} next element in the collection\n             */\n            transform: function(data) {\n\n                return data.next();\n            }\n        });\n}));\n","/**\n * Basic Axis representation.\n *\n * Only one X/Y is sufficient for chart drawing, but can\n * contain more. The idea is to draw an axis and locate it\n * wherever is necessary.\n *\n * Wether Axis is a BaseChart, no need to extend it, since\n * it will implement all the functions needed.\n *\n * @class Axis\n * @requires d3.chart,\n *           charty\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/axis', [\n                'd3.chart',\n                'underscore',\n                'charty/chartynames'\n            ],\n            function(d3, _, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, _, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, _, Charty);\n    }\n}(this, function(d3, _, Charty) {\n\n    d3.chart(Charty.CHART_NAMES.BASE_CHART)\n        .extend(Charty.CHART_NAMES.AXIS, {\n            /**\n             * Basic Axis initialization\n             *\n             * @constructor\n             * @param {Object} args Arguments for axis component\n             */\n            initialize: function() {\n\n                /**\n                 * Tranlation value in the x direction\n                 *\n                 * @property xt\n                 * @type Number\n                 * @default 0\n                 */\n                this.xt = 0;\n                /**\n                 * Tranlation value in the y direction\n                 *\n                 * @property yt\n                 * @type Number\n                 * @default 0\n                 */\n                this.yt = 0;\n\n                /**\n                 * Axis default CSS class\n                 *\n                 * @property cssClass\n                 * @type String\n                 * @default 'axis'\n                 */\n                this.cssClass = 'axis';\n\n                this.axis = d3.svg.axis();\n\n                /**\n                 * Layer options\n                 */\n                var axisLayerOptions = {\n                    /**\n                     * Data bind for axis\n                     * Since axis requires just a scale, only one element\n                     * will be set for the data selection\n                     *\n                     * @method dataBind\n                     * @param {Object} d\n                     */\n                    dataBind: function(d) {\n                        /** Case there is no data to display must be checked */\n                        if (d.getLength()) {\n                            return this.selectAll('g')\n                                .data([true]);\n                        } else {\n                            return this.selectAll('g')\n                                .data([]);\n                        }\n                    },\n\n                    /**\n                     * Insert for axis. Just inserts one svg:g\n                     * element.\n                     *\n                     * @method insert\n                     */\n                    insert: function() {\n                        return this.append('g');\n                    },\n                    events: {\n                        'enter': function() {\n\n                            var chart = this.chart();\n\n                            /**\n                             * Renders as a grid.\n                             */\n                            if (chart.grid) {\n                                chart.axis.tickSize(-chart.tsize, 0, 0);\n                            }\n\n                            /** Axis drawing */\n                            this.classed(chart.cssClass, true);\n\n                            /**\n                             * Axis translation in x or y direction.\n                             */\n                            if (chart.xt !== 0 || chart.yt !== 0) {\n                                this.attr('transform', 'translate(' + chart.xt + ',' + chart.yt + ')');\n                            }\n\n                            /** Adds a text label */\n                            if (chart.textLabel) {\n                                var text = this.append('text')\n                                    .text(chart.textLabel);\n\n                                /** Y Axis label rotation */\n                                if (chart.labelRotate) {\n                                    text.attr('transform', 'translate(' + (-chart.w / 14) + ',' + (chart.h + (chart.textLabel.length * chart.h) / 32) / 2 + ')' +\n                                        ' rotate(' + chart.labelRotate + ')');\n                                } else {\n                                    text.attr('transform', 'translate(' + (chart.w / 2 - chart.textLabel.length * 3.2) + ',' + chart.yt / 6 + ')');\n                                }\n                            }\n\n                            return this;\n                        },\n                        'merge': function() {\n                            var chart = this.chart(),\n                                axis = this.call(chart.axis),\n                                xPos = 5, // Small margin for the text so it doesn't get in the way of the chart.\n                                yPos = -2, // Fixed number of pixes so the text is somewhat centered when rotated.\n                                textAnchor = 'start';\n\n                            if (chart.rotation < 0) {\n                                textAnchor = 'end';\n                                xPos = -xPos;\n                                yPos = -yPos;\n                            }\n                            if (chart.rotation) {\n                                this.selectAll('text')\n                                    .attr('y', yPos)\n                                    .attr('x', xPos)\n                                    .style('text-anchor', textAnchor)\n                                    .attr('transform', 'rotate(' + chart.rotation + ')');\n                            }\n                            return axis;\n                        },\n                        'remove': function() {\n\n                            return this.remove();\n                        }\n                    }\n                };\n\n                /**\n                 * Axis layer creation\n                 */\n                this.layer('axis', this.base.append('g'), axisLayerOptions);\n            },\n            /**\n             * Sets tick size for the axis\n             *\n             * @method tickSize\n             * @param {Number} size ticksize\n             * @chainable\n             */\n            tickSize: function(size) {\n                /**\n                 * Size for the ticks. Necessary\n                 * to define a grid chart.\n                 *\n                 * @property tsize\n                 * @type Number\n                 * @default 0\n                 */\n                this.tsize = (size || 0);\n                return this;\n            },\n            /**\n             * Sets the scale that will be used for the axis\n             *\n             * @method setScale\n             * @param {Object} d3.scale\n             * @chainable\n             */\n            setScale: function(scale) {\n                if (!scale) {\n                    throw new Error('Undefined scale for axis.');\n                }\n\n                this.axis.scale(scale.getScale());\n                return this;\n            },\n            /**\n             * Shows the axis as a grid\n             *\n             * @method showAsGrid\n             * @param {Boolean} val true/false value\n             * @chainable\n             * @default false\n             */\n            showAsGrid: function(val) {\n                this.grid = val;\n                return this;\n            },\n            /**\n             * Sets axis orientation\n             *\n             * @method orient\n             * @param {String} orient\n             * @chainable\n             * @default bottom\n             */\n            orient: function(orient) {\n\n                this.axis.orient(orient || 'bottom');\n                return this;\n            },\n            /**\n             * Sets x translation for axis.\n             *\n             * @method xtranslate\n             * @param {Number} t tranlation value\n             * @chainable\n             */\n            xtranslate: function(t) {\n                this.xt = t;\n                return this;\n            },\n            /**\n             * Sets y translation for axis.\n             *\n             * @method ytranslate\n             * @param {Number} t tranlation value\n             * @chainable\n             */\n            ytranslate: function(t) {\n                this.yt = t;\n                return this;\n            },\n            /**\n             * Text label that will be set next to the axis\n             *\n             * @method setTextLabel\n             * @param {String} label Text label\n             * @param {Number} labelRotate Rotation for y axis label\n             * @chainable\n             */\n            setTextLabel: function(label, labelRotate) {\n                this.textLabel = label;\n                this.labelRotate = labelRotate;\n                return this;\n            },\n            /**\n             * Custom tick count setting for particular\n             * axis.\n             *\n             * This options will only work in linear scales,\n             * since the domain, by defaut, is continuous.\n             *\n             * @method tickCount\n             * @param {Number} tCount ticks count\n             * @chainable\n             */\n            tickCount: function(tCount) {\n                if (tCount) {\n                    this.axis.ticks(tCount);\n                }\n                return this;\n            },\n            /**\n             * Tick format\n             *\n             * @method tickFormat\n             * @param {String|Function} format Tick formatter.\n             * @chainable\n             */\n            tickFormat: function(format) {\n                if (_.isString(format)) {\n                    this.axis.tickFormat(d3.format(format));\n                } else if (_.isFunction(format)) {\n                    this.axis.tickFormat(format);\n                }\n                return this;\n            },\n            /**\n             * Sets CSS Class\n             *\n             * @method setClass\n             * @param {String} newClass A CSS class to use on the axis\n             * @chainable\n             */\n            setClass: function(newClass) {\n                if (newClass) {\n                    this.cssClass = newClass;\n                }\n                return this;\n            },\n            /**\n             * Sets rotation of tick labels\n             *\n             * @method setRotation\n             * @param {Number} degrees The number in degrees for the label to be rotated.\n             *   The expected number should be between -90 and 90.\n             * @chainable\n             */\n            setRotation: function(degrees) {\n                if (degrees) {\n                    this.rotation = degrees;\n                }\n                return this;\n            }\n        });\n}));\n","/**\n * Bar drawer. Takes only one data series as input.\n *\n * @class Bar\n * @extends SimpleDataGroup\n * @requires d3.chart,\n *           charty,\n *           simpledatagroup\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/bar', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/simpledatagroup'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others*/\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n    d3.chart(Charty.CHART_NAMES.SIMPLE_DATA_GROUP)\n        .extend(Charty.CHART_NAMES.BAR, {\n            /**\n             * Bar initialization\n             *\n             * @constructor\n             * @param {Object} args Arguments for axis component\n             */\n            initialize: function() {\n\n                /**\n                 * Sets only bar color as default.\n                 */\n                var defaults = {\n                    c: 'bar-default'\n                };\n\n                var options = {\n                    /**\n                     * Data bind for a bar serie.\n                     * Can have a color set for the whole serie, or\n                     * each bar can have an own color defined.\n                     *\n                     * @method dataBind\n                     * @param {Object} d example = {\n                     *                               color : 'red',\n                     *                               data = [\n                     *                                {x : 'Jan', y : 200, c : 'blue'}\n                     *                               ]\n                     *                            }\n                     * @chainable\n                     */\n                    dataBind: function(d) {\n\n                        var chart = this.chart();\n\n                        /**\n                         * Sets color for the whole data serie.\n                         */\n                        chart.c = (d.c || defaults.c);\n\n                        return this.selectAll('rect')\n                            .data(d.data);\n                    },\n                    /**\n                     * Inserts a svg:rect element.\n                     *\n                     * @method insert\n                     * @chainable\n                     */\n                    insert: function() {\n                        return this.append('rect');\n                    },\n                    events: {\n                        /** Events are set, drawing of new elements is handled by merger */\n                        'enter': function() {\n                            this.chart()\n                                .eventManager.bindAll(this);\n\n                            return this;\n                        },\n                        'merge': function() {\n\n                            var chart = this.chart(),\n                                zeroY = chart.yscale.map(0),\n                                heightZeroY = chart.h - zeroY;\n\n                            /**\n                             * chart.factor : value used to define bar's width. It can\n                             * be useful to reduce the width, in case many data series\n                             * are draw using bars.\n                             */\n                            this.attr('class', function(d) {\n                                return (d.c || chart.c);\n                            })\n                                .attr('x', function(d) {\n                                    var pos = 0;\n                                    if (chart.zScale) {\n                                        pos += chart.zScale.map(d.z, 1);\n                                    }\n                                    return (pos += chart.xscale.map(d.x, (chart.factor || 1)));\n                                })\n                                .attr('width', chart.xscale.band(chart.factor || 1))\n                                .attr('y', function(d) {\n                                    return Math.min(zeroY, chart.yscale.map(d.y, chart.factor));\n                                })\n                                .attr('height', function(d) {\n                                    return Math.abs(chart.yscale.band(chart.h, d.y) - heightZeroY);\n                                });\n\n                            return this;\n                        },\n                        'exit': function() {\n\n                            return this.remove();\n                        }\n                    }\n                };\n\n                /**\n                 * Layer creation\n                 */\n                this.layer('barlayer', this.base.append('g'), options);\n            },\n            /**\n             * Adds z scale if necessary\n             *\n             * @method setZScale\n             * @param {Object} zScale d3.scale for mapping along x axis. In fact,\n             * is the second scale for this axis.\n             * @chainable\n             */\n            setZScale: function(zScale) {\n                this.zScale = zScale;\n                return this;\n            }\n        });\n}));\n","/**\n * Bar drawer. Takes only one data series as input.\n * Extends Bar component, since only merge will be redefined.\n *\n * @class HorizontalBar\n * @constructor\n * @extends Bar\n * @requires d3.chart,\n *           charty,\n *           bar\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/horizontalbar', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/bar'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others*/\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n    d3.chart(Charty.CHART_NAMES.BAR)\n        .extend(Charty.CHART_NAMES.HORIZONTAL_BAR, {\n            /**\n             * Horizontal bars initialization\n             *\n             * @constructor\n             * @param {Object} args Arguments for horizontal bar component.\n             */\n            initialize: function() {\n\n                var barLayer = this.layer('barlayer');\n\n                /** Necessary for the way d3.chart handles events */\n                barLayer.off('merge');\n                barLayer.on('merge', function() {\n\n                    var chart = this.chart(),\n                        zeroX = chart.xscale.map(0);\n\n                    this.attr('class', function(d) {\n                        return (d.c || chart.c);\n                    })\n                        .attr(\"x\", function(d) {\n                            return chart.xscale.map(Math.min(0, d.x), chart.factor);\n                        })\n                        .attr(\"y\", function(d) {\n                            return chart.yscale.map(d.y, chart.factor);\n                        })\n                        .attr(\"width\", function(d) {\n                            return Math.abs(chart.xscale.map(d.x) - zeroX);\n                        })\n                        .attr(\"height\", chart.yscale.band(chart.factor));\n\n                    return this;\n                });\n            }\n        });\n}));\n","/**\n * Win Loss Bar drawer. Takes only one data series as input.\n *\n * Win Loss bar data elements allow the following options:\n *\n *  {\n *    x: 'Jan',\n *    y: 200,\n *    c: 'String',\n *    reset: false\n *  }\n *\n * The reset parameter is a boolean that resets the offset of\n *   the graph back to 0.\n *\n * @class WinLossBar\n * @extends Bar\n * @requires d3.chart,\n *           charty,\n *           bar\n *\n * @author \"Cesar Del Soldato <cesards@gmail.com>\"\n */\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/winlossbar', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/simpledatagroup',\n                'charty/bar'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others*/\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n    d3.chart(Charty.CHART_NAMES.BAR)\n        .extend(Charty.CHART_NAMES.WIN_LOSS_BAR, {\n            /**\n             * Win Loss Bar initialization\n             *\n             * @constructor\n             * @param {Object} args Arguments for axis component\n             */\n            initialize: function() {\n\n                /**\n                 * Sets offset for bars.\n                 */\n                var offset = 0;\n\n                /**\n                 * Layers extensions.\n                 */\n                this.layer('barlayer')\n                    .on('merge', function() {\n\n                        var chart = this.chart(),\n                            zeroY = chart.yscale.map(0);\n\n                        this.attr('class', function(d) {\n\n                            var customValue = d.c || chart.c || '';\n\n                            if (d.y > 0) {\n                                return 'win ' + customValue;\n                            } else {\n                                return 'loss ' + customValue;\n                            }\n                            return (d.c || chart.c);\n                        })\n                            .attr('y', function(d) {\n                                var yScaleMap = chart.yscale.map(d.y, chart.factor),\n                                    yPos;\n\n                                // Reset the offset if the element asks for it.\n                                if (d.reset) {\n                                    offset = 0;\n                                }\n\n                                yPos = Math.min(zeroY, yScaleMap) + offset;\n                                offset = offset + yScaleMap - zeroY;\n                                return yPos;\n                            });\n\n                        return this;\n                    });\n            }\n        });\n}));\n","/**\n * Circle drawer.\n *\n * @class Circle\n * @extends SimpleDataGroup\n * @requires d3.chart,\n *           underscore,\n *           simpledatagroup\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/circle', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/simpledatagroup'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n    d3.chart(Charty.CHART_NAMES.SIMPLE_DATA_GROUP)\n        .extend(Charty.CHART_NAMES.CIRCLE, {\n            /**\n             * Circle initializator\n             *\n             * @constructor\n             * @param {Object} args Arguments for the circle component.\n             */\n            initialize: function(args) {\n\n                var dataValidator = args.dataValidator,\n                    errors = {\n                        invalidRadio: 'Invalid value : radius for circles must be positive.'\n                    };\n\n                /**\n                 * Defaults for circles.\n                 *\n                 * r : circle radius\n                 * c : circle color\n                 */\n                var defaults = {\n                    r: 5,\n                    c: 'circle-default'\n                };\n\n                var options = {\n                    /**\n                     * Data bind for a circle serie.\n                     * Can have color and circle radius set for the whole serie,\n                     * or own values for each data point.\n                     *\n                     * @method dataBind\n                     * @param {Object} d example = {\n                     *                              color : 'red',\n                     *                              r : 5\n                     *                              data : [\n                     *                                {x : 'Jan', y: 300, c : 'blue', r : 20}\n                     *                              ]\n                     *                            }\n                     * @chainable\n                     */\n                    dataBind: function(d) {\n\n                        var chart = this.chart();\n\n                        chart.c = (d.c || defaults.c);\n                        chart.r = (dataValidator.isPositiveNumber(d.r, errors.invalidRadio) || defaults.r);\n\n                        return this.selectAll('circle')\n                            .data(d.data);\n                    },\n                    /**\n                     * Appends a svg:circle\n                     *\n                     * @method insert\n                     * @chainable\n                     */\n                    insert: function() {\n                        return this.append('circle');\n                    },\n                    events: {\n                        'enter': function() {\n                            this.chart()\n                                .eventManager.bindAll(this);\n\n                            return this;\n                        },\n                        'merge': function() {\n                            /** No click event handled on update */\n                            var chart = this.chart();\n\n                            this.attr('class', function(d) {\n                                return (d.c || chart.c);\n                            })\n                                .attr(\"r\", function(d) {\n                                    return (d.r || chart.r);\n                                })\n                                .attr('cx', function(d) {\n                                    return chart.xscale.map(d.x, 0);\n                                })\n                                .attr('cy', function(d) {\n                                    return chart.yscale.map(d.y, 0);\n                                })\n                                .attr('dx', function(d) {\n                                    return d.x;\n                                })\n                                .attr('dy', function(d) {\n                                    return d.y;\n                                });\n\n                            return this;\n                        },\n                        'exit': function() {\n\n                            return this.remove();\n                        }\n                    }\n                };\n\n                /**\n                 * Layer creation\n                 */\n                this.layer('circles', this.base.append('g'), options);\n            }\n        });\n}));\n","/**\n * Donut drawer.\n *\n * @class Donut\n * @extends SimpleDataGroup\n * @requires d3,\n *           underscore,\n *           d3.chart,\n *           charty,\n *           simpledatagroup\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/donut', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/simpledatagroup'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n    d3.chart(Charty.CHART_NAMES.SIMPLE_DATA_GROUP)\n        .extend(Charty.CHART_NAMES.DONUT, {\n            /**\n             * Donut initialization\n             *\n             * @constructor\n             * @param {Object} args Arguments for the donut chart.\n             */\n            initialize: function(args) {\n\n                var dataValidator = args.dataValidator,\n                    errors = {\n                        invalidRadius: 'Radius for donut chart must be numerical values'\n                    };\n\n                /**\n                 * ir : inner radius\n                 * or : outter radius\n                 */\n                var defaults = {\n                    ir: 90,\n                    or: 50\n                };\n\n                /**\n                 * d3 layout for pie data mapping.\n                 */\n                var pieLayout = d3.layout\n                    .pie()\n                    .sort(null)\n                    .value(function(d) {\n                        return d.y;\n                    });\n\n                var arcGen = d3.svg.arc();\n\n                var options = {\n                    /**\n                     * Data bind for donut.\n                     * Will take x elements as data for drawing\n                     * or : outter radius\n                     * ir : inner radius\n                     * Each part of the donut must have a color set\n                     *\n                     * @method dataBind\n                     * @param {Object} data example = {\n                     *                                  ir : 150,\n                     *                                  or : 100,\n                     *                                  xPosition : 100,\n                     *                                  yPosition : 100,\n                     *                                  data : [\n                     *                                    {x : 200, c: 'red' }\n                     *                                    {x : 500, c: 'blue'}\n                     *                                  ]\n                     *                                }\n                     */\n                    dataBind: function(data) {\n\n                        var chart = this.chart();\n\n                        /** By default, donut will be centered in svg */\n                        chart.xPosition = (data.xPosition || (chart.w / 2));\n                        chart.yPosition = (data.yPosition || (chart.h / 2));\n\n                        /** Radius definition */\n                        var ir = (dataValidator.isNumber(data.ir, errors.invalidRadius) || defaults.ir),\n                            or = (dataValidator.isNumber(data.or, errors.invalidRadius) || defaults.or);\n\n                        arcGen = arcGen.innerRadius(ir)\n                            .outerRadius(or);\n\n                        return this.selectAll('path')\n                            .data(pieLayout(data.data));\n                    },\n                    /**\n                     * Adds a svg:path element for the donut\n                     *\n                     * @method insert\n                     * @chainable\n                     */\n                    insert: function() {\n                        return this.append('path');\n                    },\n                    events: {\n                        'enter': function() {\n                            this.chart()\n                                .eventManager.bindAll(this);\n\n                            return this;\n                        },\n                        'merge': function() {\n\n                            var chart = this.chart();\n\n                            /** No click event is considered, it should be added on enter */\n                            this.attr('transform', 'translate(' + (chart.xPosition) + ',' + (chart.yPosition) + ')')\n                                .attr('class', function(d) {\n\n                                    return d.data.c;\n                                })\n                                .attr('d', arcGen);\n\n                            return this;\n                        },\n                        'exit': function() {\n\n                            return this.remove();\n                        }\n                    }\n                };\n\n                /**\n                 * Layer creation\n                 */\n                this.layer('paths', this.base.append('g'), options);\n            }\n        });\n}));\n","/**\n * Line drawing.\n *\n * Note : this charts doesn't take events, as it doesn't seem necessary for now.\n *\n * @class Line\n * @extends SimpleDataGroup\n * @requires d3.chart,\n *           charty,\n *           simpledatagroup\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/line', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/simpledatagroup'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n    d3.chart(Charty.CHART_NAMES.SIMPLE_DATA_GROUP)\n        .extend(Charty.CHART_NAMES.LINE, {\n            /**\n             * Line initialization\n             *\n             * @constructor\n             * @param {Object} args Arguments for the line component.\n             */\n            initialize: function() {\n\n                /**\n                 * c : default color line\n                 */\n                var defaults = {\n                    c: 'line-default'\n                };\n\n                var line = d3.svg.line();\n\n                var options = {\n                    /**\n                     * Data bind for a line serie.\n                     * Since a line is drawed using d3.line\n                     * a datum must be defined. Can also have a color\n                     * for the whole serie.\n                     *\n                     * @method dataBind\n                     * @param {Object} d example = {\n                     *                              color : 'redline'\n                     *                              data : [\n                     *                                {x : 'Jan', y: 200},\n                     *                                ...\n                     *                              ]\n                     *                            }\n                     */\n                    dataBind: function(d) {\n\n                        var chart = this.chart();\n\n                        line.x(function(d) {\n                            return chart.xscale.map(d.x, 0);\n                        })\n                            .y(function(d) {\n                                return chart.yscale.map(d.y, 0);\n                            });\n\n                        chart.datum = d.data;\n                        chart.c = (d.c || defaults.c);\n\n                        return this.selectAll('path')\n                            .data([0]);\n\n                    },\n                    /**\n                     * Appends a svg:path\n                     *\n                     * @method insert\n                     * @chainable\n                     */\n                    insert: function() {\n\n                        return this.append('path');\n                    },\n                    events: {\n                        'merge': function() {\n\n                            var chart = this.chart();\n\n                            this.datum(chart.datum)\n                                .classed(chart.c, true)\n                                .attr('d', line);\n\n                            return this;\n                        },\n                        'exit': function() {\n\n                            return this.remove();\n                        }\n                    }\n                };\n\n                /**\n                 * Layer creation\n                 */\n                this.layer('lineslayer', this.base.append('g'), options);\n            }\n        });\n}));\n","/**\n * Rounded rectangle drawer.\n *\n * @class RoundedRectangle\n * @extends SimpleDataGroup\n * @requires d3.chart,\n *           charty,\n *           simpledatagroup\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/roundedrectangle', [\n                'd3.chart',\n                'underscore',\n                'charty/chartynames',\n                'charty/simpledatagroup'\n            ],\n            function(d3, _, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, _, Charty);\n            });\n    } else {\n        // Browser globals\n        factory(d3, _, Charty);\n    }\n}(this, function(d3, _, Charty) {\n    d3.chart(Charty.CHART_NAMES.SIMPLE_DATA_GROUP)\n        .extend(Charty.CHART_NAMES.ROUNDED_RECTANGLE, {\n            /**\n             * Rounded rectangle initialization.\n             *\n             * @constructor\n             * @param {Object} args Arguments for rounded rectangles component.\n             */\n            initialize: function(args) {\n\n                var dataValidator = args.dataValidator,\n                    errors = {\n                        invalidRH: 'Invalid value for rectangle height. Must be positive number.',\n                        invalidRW: 'Invalid value for rectangle width. Must be positive number.',\n                        invalidRX: 'Invalid value for rectangle rx. Must be positive number.',\n                        invalidRY: 'Invalid value for rectangle ry. Must be positive number.'\n                    };\n\n                /**\n                 * Defaults for rectangle\n                 *\n                 * rh : rectangle height\n                 * rw : rectangle width\n                 * rc : rectangle color\n                 * rx, ry : value for rounded corners\n                 */\n                var defaults = {\n                    rh: 20,\n                    rw: 20,\n                    rc: 'rounded-rectangle-default',\n                    rx: 5,\n                    ry: 5\n                };\n\n                var options = {\n                    /**\n                     * Data bind for Rounded Rectangle.\n                     * Data defines a rectangle height (rh), width (rw),\n                     * color (rc), rx, ry. If not defined, defauls are\n                     * used.\n                     *\n                     * @method dataBind\n                     * @param {Object} d example = {\n                     *                              rh : 20,\n                     *                              rw : 20,\n                     *                              rc : 'red'\n                     *                              data : [...]\n                     *                            }\n                     * @chainable\n                     */\n                    dataBind: function(d) {\n                        var chart = this.chart();\n\n                        chart.rh = (dataValidator.isPositiveNumber(d.rh, errors.invalidRH) || defaults.rh);\n                        chart.rw = (dataValidator.isPositiveNumber(d.rw, errors.invalidRH) || defaults.rw);\n                        chart.rx = (dataValidator.isPositiveNumber(d.rx, errors.invalidRX) || defaults.rx);\n                        chart.ry = (dataValidator.isPositiveNumber(d.ry, errors.invalidRY) || defaults.ry);\n                        chart.rc = (d.rc || defaults.rc);\n\n                        return this.selectAll('rect').data(d.data);\n                    },\n                    /**\n                     * Appends a svg:rect element.\n                     *\n                     * @method insert\n                     * @chainable\n                     */\n                    insert: function() {\n                        return this.append('rect');\n                    },\n\n                    events: {\n                        enter: function() {\n                            this.chart()\n                                .eventManager.bindAll(this);\n\n                            return this;\n                        },\n\n                        merge: function() {\n                            var chart = this.chart();\n\n                            this.attr('height', chart.rh)\n                                .attr('width', chart.rw)\n                                .attr('rx', chart.rx)\n                                .attr('ry', chart.ry)\n                                .attr('x', _.partial(chart.x, chart))\n                                .attr('y', _.partial(chart.y, chart))\n                                .attr('class', _.partial(chart['class'], chart));\n\n                            return this;\n                        },\n\n                        exit: function() {\n                            return this.remove();\n                        }\n                    }\n                };\n\n                /**\n                 * Layer creation\n                 */\n                this.layer('roundedrects', this.base, options);\n            },\n\n            /**\n            Calculate `x` to be centered horizontally.\n            **/\n            x: function(chart, d) {\n                return chart.xscale.map(d.x, 1) + (chart.xscale.band(1) / 2) - (chart.rw / 2);\n            },\n\n            /**\n            Calculate `y` to be centered vertically.\n            **/\n            y: function(chart, d) {\n                return chart.yscale.map(d.y) - chart.rh;\n            },\n\n            /**\n            Class attribute generation.\n            **/\n            'class': function(chart, d) {\n                return d.rc || chart.rc;\n            }\n        });\n}));\n","/**\n * Text labeling.\n *\n * @class Text\n * @extends SimpleDataGroup\n * @requires d3.chart,\n *          charty,\n *          simpledatagroup\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/text', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/simpledatagroup'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n\n    var Label = {\n        /**\n         * @constructor\n         * Text label initializator\n         */\n        initialize: function() {\n            var options = {\n                /**\n                 * Data bind for text labeling.\n                 * Can depend on other elements, for instance,\n                 * the rounded rectangles to form a label.\n                 *\n                 * @method dataBind\n                 * @param {Object} d example = {\n                 *                              data : [...]\n                 *                            }\n                 */\n                dataBind: this.dataBind,\n                /**\n                 * Insert a svg:text element for each data input.\n                 *\n                 * @method insert\n                 * @chainable\n                 */\n                insert: this.insert,\n\n                events: {\n                    enter: this.enter,\n                    merge: this.merge,\n                    exit: this.exit\n                }\n            };\n\n          /**\n          Layer creation\n          **/\n          this.layer('texts', this.base.append('g'), options);\n        },\n\n        /**\n        Calculate `x` to be centered horizontally.\n        **/\n        x: function(chart, d) {\n            return chart.xscale.map(d.x, 1) + (chart.xscale.band(1) / 2);\n        },\n\n        /**\n        Calculate `y` to be centered vertically.\n        **/\n        y: function(chart, d) {\n            return chart.yscale.map(d.y) - 15;\n        },\n\n        /**\n        Placeholder to set a \"x\" offset.\n        No Op.\n        **/\n        dx: function(chart, d) {\n            return '';\n        },\n\n        /**\n        Placeholder to set a \"y\" offset.\n        No Op.\n        **/\n        dy: function(chart, d) {\n            return '';\n        },\n\n        /**\n        Text data accessor.\n\n        @see https://github.com/mbostock/d3/wiki/Selections#wiki-text\n        **/\n        text: function(d) {\n            return d.y;\n        },\n\n\n        /**** Custom Events Data Accessors ****/\n\n        dataBind: function(d) {\n            return this.selectAll('text')\n                .data(d.data);\n        },\n\n        insert: function() {\n            return this.append('text');\n        },\n\n        enter: function() {\n            var chart = this.chart();\n\n            this.attr('text-anchor', 'middle')\n                .attr('dy', '0.35em');\n\n            chart.eventManager.bindAll(this);\n\n            return this;\n        },\n\n        merge: function() {\n            var chart = this.chart();\n\n            this.attr('x', _.partial(chart.x, chart))\n                .attr('y', _.partial(chart.y, chart))\n                .attr('dx', _.partial(chart.dx, chart))\n                .attr('dy', _.partial(chart.dy, chart))\n                .text(chart.text);\n\n            return this;\n        },\n\n        exit: function() {\n            return this.remove();\n        }\n    };\n\n    d3.chart(Charty.CHART_NAMES.SIMPLE_DATA_GROUP)\n        .extend(Charty.CHART_NAMES.TEXT, Label);\n}));\n","/**\n * Text labeling above the data element. Redefindes \"merge\"\n * Useful for vertical bar chart\n *\n * @class AboveText\n * @extends Text\n * @requires d3.chart,\n *           charty,\n *           text\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/abovetext', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/text'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n    d3.chart(Charty.CHART_NAMES.TEXT)\n        .extend(Charty.CHART_NAMES.ABOVE_TEXT, {\n            /**\n             * @constructor\n             * @param {Object} args Arguments for above text component.\n             */\n            initialize: function() {\n                var textLayer = this.layer('texts');\n\n                textLayer.off('merge');\n                textLayer.on('merge', function() {\n                    var chart = this.chart(),\n                        zeroY = chart.yscale.map(0);\n\n                    this.attr('x', function(d) {\n                        var pos = 0;\n                        if (chart.zScale) {\n                            pos += chart.zScale.map(d.z, 1);\n                        }\n\n                        return (pos += chart.xscale.map(d.x, (chart.factor || 1)) + (chart.xscale.band(chart.factor || 1) / 2));\n                    })\n                        .attr('y', function(d) {\n                            return Math.min(zeroY, chart.yscale.map(d.y, chart.factor)) - 7;\n                        })\n                        .text(chart.text);\n                });\n            }\n        });\n}));\n","/**\n * Text labeling right to the data element. Redefindes \"merge\"\n * Useful for horizonal bar chart\n *\n * @class RightText\n * @extends Text\n * @requires d3.chart,\n *           charty,\n *           text\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/righttext', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/text'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n    d3.chart(Charty.CHART_NAMES.TEXT)\n        .extend(Charty.CHART_NAMES.RIGHT_TEXT, {\n            /**\n             * @constructor\n             * @param {Object} args Arguments for right text component.\n             */\n            initialize: function() {\n                var textLayer = this.layer('texts');\n\n                textLayer.off('merge');\n                textLayer.on('merge', function() {\n\n                    var chart = this.chart();\n\n                    this.attr('x', function(d) {\n                        return chart.xscale.map(d.x, chart.factor) + 12;\n                    })\n                        .attr('y', function(d) {\n                            return chart.yscale.map(d.y, chart.factor) + chart.yscale.band(chart.factor || 1) / 2;\n                        })\n                        .text(chart.text);\n\n                    return this;\n                });\n            }\n        });\n}));\n","/**\n * Text labeling in the middle the data element with Win Loss offser calculation.\n * Redefindes \"merge\"\n * Useful for vertical bar chart.\n *\n * @class AboveText\n * @extends Text\n * @requires d3.chart,\n *           charty,\n *           text\n *\n * @author \"Cesar Del Soldato <cesards@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/winlosstext', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/text'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n    d3.chart(Charty.CHART_NAMES.TEXT)\n        .extend(Charty.CHART_NAMES.WIN_LOSS_TEXT, {\n            /**\n             * @constructor\n             * @param {Object} args Arguments for above text component.\n             */\n            initialize: function() {\n\n                var textLayer = this.layer('texts');\n\n                /**\n                 * Sets offset for label.\n                 */\n                var offset = 0;\n\n                textLayer.off('merge');\n                textLayer.on('merge', function() {\n\n                    var chart = this.chart(),\n                        zeroY = chart.yscale.map(0),\n                        heightZeroY = chart.h - zeroY;\n\n                    this.attr('x', function(d) {\n                        var pos = 0;\n                        if (chart.zScale) {\n                            pos += chart.zScale.map(d.z, 1);\n                        }\n\n                        return (pos += chart.xscale.map(d.x, (chart.factor || 1)) + (chart.xscale.band(chart.factor || 1) / 2));\n                    })\n                        .attr('y', function(d) {\n                            var yScaleMap = chart.yscale.map(d.y, chart.factor),\n                                yPos;\n\n                            // Reset the offset if the element asks for it.\n                            if (d.reset) {\n                                offset = 0;\n                            }\n\n                            yPos = yScaleMap + offset + (chart.yscale.band(chart.h, d.y) - heightZeroY) / 2;\n                            offset = offset + yScaleMap - zeroY;\n                            return yPos;\n                        })\n                        .text(chart.text);\n                });\n            }\n        });\n}));\n","/**\n * Text labeling with a custom text. The label is placed in the middle of\n * the data point (x and y).\n *\n * @class LabeledText\n * @extends Text\n * @requires d3.chart,\n *           charty,\n *           text\n *\n * @author \"Mauro Buselli <maurobuselli@gmail.com>\"\n */\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/labeledtext', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/text'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n\n    d3.chart(Charty.CHART_NAMES.TEXT)\n        .extend(Charty.CHART_NAMES.LABELED_TEXT, {\n            x: function(chart, d) {\n                return d.label ? chart.xscale.map(d.x, 1) : 0;\n            },\n\n            y: function(chart, d) {\n                return d.label ? chart.yscale.map(d.y) : 0;\n            },\n\n            dx: function(chart, d) {\n                return (d.label && d.label.text) ? (-(d.label.text.toString().length / 4) + 'em') : 0;\n            },\n\n            dy: function(chart, d) {\n                return '0.25em';\n            },\n\n            text: function(d) {\n                return d.label ? (d.label.text || '') : '';\n            },\n\n            enter: function() {\n                this.chart().eventManager.bindAll(this);\n            },\n\n            exit: function() {\n                return this.remove();\n            }\n        });\n}));\n","/**\n * Triangle drawer.\n *\n * @class Triangle\n * @extends SimpleDataGroup\n * @requires d3.chart,\n *           charty,\n *           simpledatagroup\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/triangle', [\n                'd3.chart',\n                'charty/chartynames',\n                'underscore',\n                'charty/simpledatagroup'\n            ],\n            function(d3, Charty, _) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, Charty, _);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty, _);\n    }\n}(this, function(d3, Charty, _) {\n    d3.chart(Charty.CHART_NAMES.SIMPLE_DATA_GROUP)\n        .extend(Charty.CHART_NAMES.TRIANGLE, {\n            /**\n             * Triangle initialization\n             *\n             * @constructor\n             * @param {Object} args Arguments for triangle component.\n             */\n            initialize: function() {\n\n                /**\n                 * c : triangle color\n                 */\n                var defaults = {\n                    c: 'triangle-default'\n                };\n\n                var options = {\n                    /**\n                     * Data bind for a triangle serie.\n                     * Will set a color for the whole serie.\n                     *\n                     * @method dataBind\n                     * @param {Object} d example = {\n                     *                              color : 'red',\n                     *                              data : [\n                     *                                {x : 'Jun', y : 200 , c:'blue'},\n                     *                                ...\n                     *                              ]\n                     *                            }\n                     * @chainable\n                     */\n                    dataBind: function(d) {\n\n                        var chart = this.chart();\n\n                        chart.c = (d.c || defaults.c);\n\n                        return this.selectAll('path')\n                            .data(d.data);\n\n                    },\n                    /**\n                     * Appends a svg:path\n                     *\n                     * @method insert\n                     * @chainable\n                     */\n                    insert: function() {\n                        return this.append('path');\n                    },\n                    events: {\n                        'enter': function() {\n                            this.chart()\n                                .eventManager.bindAll(this);\n\n                            return this;\n                        },\n                        'merge': function() {\n                            /** Click event won't be managed here */\n                            var chart = this.chart();\n\n                            this.attr('class', function(d) {\n                                return (d.c || chart.c);\n                            })\n                                .attr('d', function(d) {\n                                    return chart.getPath(d);\n                                });\n\n                            return this;\n                        },\n                        'exit': function() {\n\n                            return this.remove();\n                        }\n                    }\n                };\n\n                /**\n                 * Layer creation\n                 */\n                this.layer('triangles', this.base.append('g'), options);\n            },\n            /**\n             * Transform must be redefined in order to\n             * separate a triangle in two constituting parts\n             *\n             * @method transform\n             * @param {Object} data Data Acccessor\n             * @return {Object} already mapped values for each datapoint\n             */\n            transform: function(data) {\n                var result = [],\n                    dataArray = data.next()\n                    .data,\n                    self = this,\n                    xBand = this.xscale.band(1),\n                    zeroY = this.yscale.map(0);\n\n                /** Obtains necessary point to draw both paths */\n                _.each(dataArray, function(element) {\n                    var x1 = self.xscale.map(element.x, 1),\n                        x2 = x1 + (xBand / 2),\n                        x3 = x1 + xBand,\n                        y1 = zeroY,\n                        y2 = self.yscale.map(element.y);\n\n                    result.unshift({\n                        x1: x1,\n                        y1: y1,\n                        x2: x2,\n                        y2: y2,\n                        x3: x2,\n                        y3: y1,\n                        c: element.c1,\n                        x: element.x,\n                        y: element.y\n                    });\n                    result.unshift({\n                        x1: x2,\n                        y1: y1,\n                        x2: x2,\n                        y2: y2,\n                        x3: x3,\n                        y3: y1,\n                        c: element.c2,\n                        x: element.x,\n                        y: element.y\n                    });\n                });\n\n                return {\n                    data: result,\n                    c: data.first()\n                        .c\n                };\n            },\n            /**\n             * Path is defined as a string connecting different\n             * data, visualized as dots.\n             *\n             * @method getPath\n             * @param {Object} d Data point\n             * @return {String} path\n             */\n            getPath: function(d) {\n                return ('M ' + d.x1 + ' ' + d.y1 + ' L ' + d.x2 + ' ' + d.y2 + ' L ' + d.x3 + ' ' + d.y3);\n            }\n        });\n}));\n","/**/\n/**\n * Defines a data transformation for composite charts\n *\n * @class MultipleDataGroup\n * @extend BaseChart\n * @requires d3.chart,\n *           charty,\n *           basechart\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/multipledatagroup', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/basechart'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n    d3.chart(Charty.CHART_NAMES.BASE_CHART)\n        .extend(Charty.CHART_NAMES.MULTIPLE_DATA_GROUP, {\n            /**\n             * Data transformation for multiple data series.\n             *\n             * @method tranform\n             * @param {Object} data Data accessor\n             * @return {Object} Data accesor\n             */\n            transform: function(data) {\n\n                this._calculateDomains(data);\n                return data;\n            },\n            /**\n             * Default domain for x scaling\n             *\n             * @method setDefaultXDomain\n             * @param {Object} domain Array for x domain\n             * @chainable\n             */\n            setDefaultXDomain: function(domain) {\n                this.defaultXDomain = domain;\n                return this;\n            },\n            /**\n             * Default domain for y scaling\n             *\n             * @method setDefaultYDomain\n             * @param {Object} domain Array for y domain\n             * @chainable\n             */\n            setDefaultYDomain: function(domain) {\n                this.defaultYDomain = domain;\n                return this;\n            },\n            /**\n             * Domain calculation\n             *\n             * @method _calculateDomains\n             * @param {Object} data Data for domains\n             * @param {Object} zScale d3.scale\n             */\n            _calculateDomains: function(data) {\n                /** Default x domain */\n                if (this.defaultXDomain) {\n                    this.xscale.setDomain(this.defaultXDomain);\n                } else {\n                    this.xscale.calculateDomain(data, function(d) {\n                        return d.x;\n                    });\n                }\n\n                if (this.zScale) {\n                    this.xscale.setRange(this.zScale.band(1));\n                } else {\n                    this.xscale.setRange(this.w);\n                }\n\n                /** Default y domain */\n                if (this.defaultYDomain) {\n                    this.yscale.setDomain(this.defaultYDomain);\n                } else {\n                    this.yscale.calculateDomain(data, function(d) {\n                        return d.y;\n                    });\n                }\n                this.yscale.setRange(this.h);\n            }\n        });\n}));\n","/**\n * Chart that can represent many data series\n *\n * @class MultipleInstancesMixin\n * @extends BaseChart\n * @requires d3.chart,\n *           charty,\n *           basechart\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/multipleinstancesmixin', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/basechart'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n\n    d3.chart(Charty.CHART_NAMES.BASE_CHART)\n        .extend(Charty.CHART_NAMES.MULTIPLE_INSTANCES_MIXIN, {\n\n            /**\n             * Creates multiple mixin instances of a specific chart.\n             * It is necessary to set the instances count\n             * and the chart name.\n             *\n             * @constructor\n             * @param {Object} args example = {\n             *                                    instances : 2,\n             *                                    chartName : 'Bar'\n             *                                  }\n             */\n            initialize: function(args) {\n\n                var f = args.instances;\n\n                this.componentsMixins = [];\n\n                for (var i = args.instances - 1; i >= 0; i--) {\n\n                    var instance = this.mixin(args.chartName,\n                        this.base.append('g'),\n                        args);\n\n                    instance.factor = ((f--) / args.instances);\n                }\n            }\n        });\n}));\n","/**\n * Base XY system for all the 2D charts.\n *\n * @class XYAxis\n * @requires d3.chart,\n *           charty,\n *           axis\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/xyaxis', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/axis'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n\n    d3.chart(Charty.CHART_NAMES.XY_AXIS, {\n        /**\n         * XY axis system initializer\n         *\n         * @constructor\n         * @param {Object} args Arguments for xy axis system.\n         */\n        initialize: function(args) {\n            this.xaxis = this.mixin(Charty.CHART_NAMES.AXIS,\n                this.base.append('g'),\n                args)\n                .orient('bottom')\n                .setTextLabel(args.xAxisLabel)\n                .tickCount(args.xTickCount)\n                .tickFormat(args.xAxisTickFormat)\n                .setClass(args.xAxisClass)\n                .setRotation(args.xAxisTickRotation);\n\n            this.yaxis = this.mixin(Charty.CHART_NAMES.AXIS,\n                this.base.append('g'),\n                args)\n                .orient('left')\n                .setTextLabel(args.yAxisLabel, '-90')\n                .tickCount(args.yTickCount)\n                .tickFormat(args.yAxisTickFormat)\n                .setClass(args.yAxisClass)\n                .setRotation(args.yAxisTickRotation);\n\n        },\n        /**\n         * Show whole chart as a grid.\n         *\n         * @method showAsGrid\n         * @chainable\n         */\n        showAsGrid: function(showAsGrid) {\n            this.xaxis.showAsGrid(showAsGrid);\n            this.yaxis.showAsGrid(showAsGrid);\n            return this;\n        },\n        /**\n         * Moves x axis according to given height value, and sets\n         * tick size value.\n         *\n         * @method height\n         * @param {Number} newHeight chart's height\n         * @chainable\n         */\n        height: function(newHeight) {\n            this.xaxis.ytranslate(newHeight)\n                .tickSize(newHeight);\n            this.yaxis.height(newHeight);\n            return this;\n        },\n        /**\n         * Sets tick size, based on given width value\n         *\n         * @method width\n         * @param {Number} newWidth chart's width\n         * @chainable\n         */\n        width: function(newWidth) {\n            this.yaxis.tickSize(newWidth)\n                .width(newWidth);\n            this.xaxis.width(newWidth);\n            return this;\n        },\n        /**\n         * Sets x scale.\n         *\n         * @method setXScale\n         * @param {Object} scale d3.scale\n         * @chainable\n         */\n        setXScale: function(scale) {\n            this.xaxis.setScale(scale);\n            return this;\n        },\n        /**\n         * Sets y scale.\n         *\n         * @method setYScale\n         * @param {Object} scale d3.scale\n         * @chainable\n         */\n        setYScale: function(scale) {\n            this.yaxis.setScale(scale);\n            return this;\n        }\n    });\n}));\n","/**\n * Defines a YXY axis system.\n * Two Y Axis (one left, one right)\n * One X Axis (bottom).\n *\n * It is built on top of the XY axis system that is already defined.\n *\n * @class YXYAxis\n * @requires d3.chart,\n *          charty,\n *          xyaxis\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/yxyaxis', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/xyaxis'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        return factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n    d3.chart(Charty.CHART_NAMES.YXY_AXIS, {\n        /**\n         * Defines as a mixin a right Y axis, a left Y axis, a X bottom axis\n         *\n         * @constructor\n         * @param {Object} args Arguments for yxy axis system.\n         */\n        initialize: function(args) {\n            this.xyaxis = this.mixin(Charty.CHART_NAMES.XY_AXIS,\n                this.base.append('g'),\n                args);\n\n            this.yaxisright = this.mixin(Charty.CHART_NAMES.AXIS,\n                this.base.append('g'),\n                args)\n                .orient('right')\n                .tickCount(args.yTickCount)\n                .tickFormat(args.yAxisTickFormat);\n\n        },\n        /**\n         * Show whole chart as a grid.\n         *\n         * @method showAsGrid\n         * @chainable\n         */\n        showAsGrid: function(showAsGrid) {\n            this.xyaxis.showAsGrid(showAsGrid);\n            return this;\n        },\n        /**\n         * Sets x axis position and tick size\n         *\n         * @method height\n         * @param {Number} newHeight chart's height\n         * @chainable\n         */\n        height: function(newHeight) {\n            this.xyaxis.height(newHeight);\n            return this;\n        },\n        /**\n         * Sets y axis disposition, based on a given\n         * width value, and tick size for only one y axis.\n         *\n         * @method width\n         * @param {Number} newWidth chart's width\n         * @chainable\n         */\n        width: function(newWidth) {\n            this.yaxisright.xtranslate(newWidth);\n            this.xyaxis.width(newWidth);\n            return this;\n        },\n        /**\n         * Redefinition of x scale setter\n         *\n         * @method setXScale\n         * @param {Object} scale d3.scale\n         * @chainable\n         */\n        setXScale: function(scale) {\n            this.xyaxis.setXScale(scale);\n            return this;\n        },\n        /**\n         * Redefinition of y scale setter\n         *\n         * @method setYScale\n         * @param {Object} scale d3.scale\n         * @chainable\n         */\n        setYScale: function(scale) {\n            this.xyaxis.setYScale(scale);\n            this.yaxisright.setScale(scale);\n            return this;\n        }\n    });\n}));\n","/**\n * Create a bar chart that will render\n * N data series\n *\n * @class BarChart\n * @extends MultipleDataGroup\n * @requires d3.chart,\n *           charty,\n *           underscore,\n *           bar,\n *           multipledatagroup,\n *           yxyaxis,\n *           multipleinstancesmixin\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/barchart', [\n                'd3.chart',\n                'charty/chartynames',\n                'underscore',\n                'charty/bar',\n                'charty/horizontalbar',\n                'charty/multipledatagroup',\n                'charty/xyaxis',\n                'charty/yxyaxis',\n                'charty/multipleinstancesmixin',\n                'charty/text',\n                'charty/abovetext',\n                'charty/righttext'\n            ],\n            function(d3, Charty, _) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, Charty, _);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty, _);\n    }\n}(this, function(d3, Charty, _) {\n\n    d3.chart(Charty.CHART_NAMES.MULTIPLE_DATA_GROUP)\n        .extend(Charty.CHART_NAMES.BAR_CHART, {\n\n            /**\n             * BarChart initialization.\n             *\n             * @constructor\n             * @param {Object} args example = {\n             *                       instances : 2,\n             *                       labelType : Charty.CHART_NAMES.ABOVE_TEXT\n             *                    }\n             */\n            initialize: function(args) {\n\n                args.instances = (args.instances || 1);\n                args.chartName = args.barType;\n\n                this.mixin(args.axisSystem, this.base.append('g'), args)\n                    .showAsGrid(args.showAsGrid);\n\n                this.mixin(\n                    Charty.CHART_NAMES.MULTIPLE_INSTANCES_MIXIN,\n                    this.base.append('g'),\n                    args\n                );\n\n                /** Optional */\n                if (args.labelType) {\n                    this.mixin(\n                        Charty.CHART_NAMES.MULTIPLE_INSTANCES_MIXIN,\n                        this.base.append('g'),\n                        // @TODO review extend vs defaults\n                        _.extend(args, {\n                            chartName: args.labelType\n                        })\n                    );\n                }\n            }\n        });\n}));\n","/*global ScaleFactory: true*/\n/**\n * Grouped bar chart.\n * Unlike regular bar char, grouped needs to define\n * two scales for x axis : one for the axis itself, and\n * another one for the data mapping.\n *\n * @class GroupedBarChart\n * @extends MultipleDataGroup\n * @requires d3.chart,\n *           charty/chartynames,\n *           charty/scalesfactory,\n *           charty/bar,\n *           charty/xyaxis,\n *           charty/multipledatagroup,\n *           charty/multipleinstancesmixin\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/groupedbarchart', [\n                'd3.chart',\n                'charty/scalesfactory',\n                'charty/chartynames',\n                'charty/bar',\n                'charty/xyaxis',\n                'charty/multipledatagroup',\n                'charty/multipleinstancesmixin',\n            ],\n            function(d3, ScaleFactory, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, ScaleFactory, Charty);\n            });\n    } else {\n        /** Browser globals */\n        return factory(d3, ScaleFactory, Charty);\n    }\n}(this, function(d3, ScaleFactory, Charty) {\n    d3.chart(Charty.CHART_NAMES.MULTIPLE_DATA_GROUP)\n        .extend(Charty.CHART_NAMES.GROUPED_BAR_CHART, {\n\n            /**\n             * Grouper Bar Chart initializer.\n             *\n             * @constructor\n             * @param {Object} args Arguments for grouped bar chart.\n             */\n            initialize: function(args) {\n\n                this.axisSystem = this.mixin(args.axisSystem, this.base.append('g'), args)\n                    .showAsGrid(args.showAsGrid);\n                this.bars = this.mixin(Charty.CHART_NAMES.BAR, this.base.append('g'), args);\n            },\n            /**\n             * It is necessary to rewrite transform data, in order to\n             * generate a new scale.\n             *\n             * Two scales are needed : one for the axis, and another\n             * one for bar drawing.\n             *\n             * @method\n             * @param {Object} data Data Accessor\n             */\n            transform: function(data) {\n\n                // @TODO review this call.\n                data.first();\n\n                if (this.defaultZDomain) {\n                    this.zScale.setDomain(this.defaultZDomain);\n                } else {\n                    this.zScale.calculateDomain(data, function(d) {\n                        return d.z;\n                    });\n                }\n                this.zScale.setRange(this.w);\n\n                this._calculateDomains(data);\n\n                /** x scale is replaced with z scale */\n                this.axisSystem.setXScale(this.zScale);\n\n                /** Adds z scale to bars */\n                this.bars.setZScale(this.zScale);\n\n                return data;\n            },\n            /**\n             * Adding new scale for bars grouping\n             *\n             * @method\n             * @param {Object} zScale d3.scale\n             * @chainable\n             */\n            setZScale: function(zScale) {\n                if (zScale) {\n                    this.zScale = zScale;\n                }\n\n                return this;\n            },\n            /**\n             * Default z domain\n             *\n             * @method\n             * @param {Object} zDomain\n             * @chainable\n             */\n            setDefaultZDomain: function(zDomain) {\n                this.defaultZDomain = zDomain;\n                return this;\n            }\n        });\n}));\n","/**\n * Custom donut chart.\n * Sets a text inside the donut, showing a text label\n * with the represented value.\n *\n * So, this representation will get only one value. The\n * other one must be calculated (rest).\n *\n * The problem can't be solved using mixins, since the text position\n * doesn't depend on the data value.\n *\n * @class DonutWithInnerText\n * @extends Donut\n * @requires d3.chart,\n *           charty,\n *           donut\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/donutwithinnertext', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/donut'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n\n    d3.chart(Charty.CHART_NAMES.DONUT)\n        .extend(Charty.CHART_NAMES.DONUT_INNER_TEXT, {\n\n            /** \n             * Constructor\n             *\n             * @constructor\n             * @param {Object} args Arguments for donnut with inner text.\n             */\n            initialize: function(args) {\n\n                var dataValidator = args.dataValidator,\n                    errors = {\n                        invalidFontSize: 'Invalid value : font size must be positive'\n                    };\n\n                /**\n                 * Defaults for Inner text\n                 */\n                var defaults = {\n                    fontSize: 55\n                };\n\n                var options = {\n                    /**\n                     * First element will be shown as label.\n                     *\n                     * Data here will take two elements, since is necessary\n                     * to render two paths for the donut chart.\n                     *\n                     * The first one is the one that will be shown in label.\n                     * The second one is the rest of the donut.\n                     *\n                     * @method dataBind\n                     * @param {Object} data\n                     * @chainable\n                     */\n                    dataBind: function(d) {\n\n                        var chart = this.chart(),\n                            data = d.data,\n                            stringValue = (data[0].y)\n                            .toString() + '%';\n\n                        chart.fontSize = (dataValidator.isPositiveNumber(d.fontSize, errors.invalidFontSize) || defaults.fontSize);\n                        /** By default, text will be centered inside donut */\n                        chart.xPosition = (d.xPosition || (chart.w / 2));\n                        chart.yPosition = (d.yPosition || (chart.h / 2));\n\n                        return this.selectAll('text')\n                            .data([stringValue]);\n                    },\n                    /**\n                     * Inserts one text for the value to display\n                     *\n                     * @method insert\n                     * @chainable\n                     */\n                    insert: function() {\n                        return this.append('text');\n                    },\n                    events: {\n                        'enter': function() {\n\n                            var chart = this.chart();\n\n                            this.attr('x', chart.xPosition)\n                                .attr('y', chart.yPosition)\n                                .attr('dy', '0.35em')\n                                .attr('text-anchor', 'middle')\n                                .attr('font-size', chart.fontSize)\n                                .text(function(d) {\n                                    return d;\n                                });\n\n                            return this;\n                        },\n                        'update': function() {\n\n                            this.text(function(d) {\n                                return d;\n                            });\n\n                            return this;\n                        },\n                        'exit': function() {\n\n                            return this.remove();\n                        }\n                    }\n                };\n\n                /**\n                 * Layer creation\n                 */\n                this.layer('donutText', this.base.append('g'), options);\n            }\n        });\n}));\n","/**\n * Labeled triangle chart drawer.\n *\n * @class LabeledTriangleChart\n * @extends MultipleDataGroup\n * @requires d3.chart,\n *           charty,\n *           triangle,\n *           roundedrectangle,\n *           textlabel,\n *           multipleinstancesmixin,\n *           yxyaxis,\n *           multipledatagroup\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/labeledtrianglechart', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/triangle',\n                'charty/roundedrectangle',\n                'charty/text',\n                'charty/multipleinstancesmixin',\n                'charty/yxyaxis',\n                'charty/multipledatagroup'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n    d3.chart(Charty.CHART_NAMES.MULTIPLE_DATA_GROUP)\n        .extend(Charty.CHART_NAMES.LABELED_TRIANGLE_CHART, {\n            /**\n             * Labeled triangle constructor.\n             *\n             * Will contain only one instance of each component chart, since no\n             * resize can be assumed.\n             *\n             * @constructor\n             * @param {Object} args Arguments for triangle chart.\n             */\n            initialize: function(args) {\n                this.mixin(args.axisSystem, this.base.append('g'), args)\n                    .showAsGrid(args.showAsGrid);\n\n                this.mixin(Charty.CHART_NAMES.TRIANGLE, this.base.append('g'), args);\n\n                this.mixin(Charty.CHART_NAMES.ROUNDED_RECTANGLE, this.base.append('g'), args);\n\n                this.mixin(Charty.CHART_NAMES.TEXT, this.base.append('g'), args);\n            }\n        });\n}));\n","/**\nLine chart drawers.\nTakes N input data series\n\n@class LineChart\n@extends MultipleDataGroup\n@requires d3.chart,\n          charty,\n          line,\n          multipledatagroup\n\n@author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n*/\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/linechart', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/line',\n                'charty/multipledatagroup'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n    d3.chart(Charty.CHART_NAMES.MULTIPLE_DATA_GROUP)\n        .extend(Charty.CHART_NAMES.LINE_CHART, {\n            /**\n             * Multiple data group initializator.\n             *\n             * Creates N instances of a given mixin.\n             *\n             * @constructor\n             * @param {Object} args N = args.instances\n             */\n            initialize: function(args) {\n                args.chartName = Charty.CHART_NAMES.LINE;\n                args.instances = (args.instances || 1);\n\n                this.mixin(args.axisSystem, this.base.append('g'), args)\n                    .showAsGrid(args.showAsGrid);\n\n                this.mixin(\n                    Charty.CHART_NAMES.MULTIPLE_INSTANCES_MIXIN,\n                    this.base.append('g'),\n                    args\n                );\n            }\n        });\n}));\n","/**\n * Line chart combined with circles. Combines the line chart and\n * the circle component, defining both as mixins.\n *\n * @class LineChartCircles\n * @extends MultipleDataGroup\n * @requires\td3.chart,\n *           charty,\n *           multipledatagroup,\n *           linechart,\n *           multipleinstancesmixin\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/linechartcircles', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/multipledatagroup',\n                'charty/linechart',\n                'charty/multipleinstancesmixin'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n    d3.chart(Charty.CHART_NAMES.MULTIPLE_DATA_GROUP)\n        .extend(Charty.CHART_NAMES.LINE_CHART_CIRCLES, {\n\n            /**\n             * Line and circles chart initializator.\n             *\n             * @constructor\n             * @param {Object} args example = {\n             *                          instances : 2\n             *                      }\n             */\n            initialize: function(args) {\n                this.mixin(\n                    Charty.CHART_NAMES.LINE_CHART,\n                    this.base.append('g'),\n                    args\n                );\n\n                args.chartName = Charty.CHART_NAMES.CIRCLE;\n                args.instances = (args.instances || 1);\n\n                this.mixin(\n                    Charty.CHART_NAMES.MULTIPLE_INSTANCES_MIXIN,\n                    this.base.append('g'),\n                    args\n                );\n            }\n        });\n}));\n","/**\n * Scatterplot chart. Defined combining an axis system and a circles mixin.\n *\n * @class Scatterplot\n * @extends MultipleDataGroup\n * @requires d3.chart,\n *           charty,\n *           circle,\n *           multipledatagroup,\n *           yxyaxis,\n *           multipleinstancesmixin\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/scatterplot', [\n                'd3.chart',\n                'charty/chartynames',\n                'charty/circle',\n                'charty/multipledatagroup',\n                'charty/yxyaxis',\n                'charty/multipleinstancesmixin',\n                'charty/labeledtext'\n            ],\n            function(d3, Charty) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(d3, Charty);\n            });\n    } else {\n        /** Browser globals */\n        factory(d3, Charty);\n    }\n}(this, function(d3, Charty) {\n    d3.chart(Charty.CHART_NAMES.MULTIPLE_DATA_GROUP)\n        .extend(Charty.CHART_NAMES.SCATTERPLOT, {\n\n            /**\n             * Chart constructor\n             *\n             * @constructor\n             * @param {Object} args Arguments for scatterplot chart.\n             */\n            initialize: function(args) {\n                args.chartName = Charty.CHART_NAMES.CIRCLE;\n                args.instances = (args.instances || 1);\n\n                this.mixin(args.axisSystem, this.base.append('g'), args)\n                    .showAsGrid(args.showAsGrid);\n\n                this.mixin(Charty.CHART_NAMES.MULTIPLE_INSTANCES_MIXIN, this.base, args);\n\n                // Applying the multiple data sets also to the \"LABELED_TEXT\" chart.\n                // TODO: Need a refactor of \"MULTIPLE_INSTANCES_MIXIN\" to allow adding the\n                //  data sets to more than one chart.\n                args.chartName = Charty.CHART_NAMES.LABELED_TEXT;\n                this.mixin(Charty.CHART_NAMES.MULTIPLE_INSTANCES_MIXIN, this.base, args);\n            }\n        });\n}));\n","/**\n * Accessor for data collection\n *\n * Accessor will iterate over the data collection.\n *\n * @class Accessor\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/accessor', function() {\n            /** Export global even in AMD case in case this script\n             * is loaded with others */\n            return factory();\n        });\n    } else {\n        /** Browser globals */\n        root.Accessor = factory();\n    }\n}(this, function() {\n\n    /** \n     * Class constructor\n     *\n     * @constructor\n     */\n    function Accessor() {\n        this.index = -1;\n    }\n\n    /**\n     * Returns first element of the collection\n     *\n     * @method first\n     * @return {Object} data element from the collection\n     */\n    Accessor.prototype.first = function() {\n        return this.data[0];\n    };\n\n    /**\n     * Returns the next element of the collection\n     * If no more elements are available,\n     * collection index will reset itself\n     *\n     * @method next\n     * @return {Object} next element in the collection,\n     * first element in case of reset\n     */\n    Accessor.prototype.next = function() {\n        if (!this.hasNext()) {\n            this.restart();\n        }\n        return this.data[++this.index];\n    };\n\n    /**\n     * Determines if the collection has more elements\n     *\n     * @method hasNext\n     * @return {Boolean} true if collection has more elements,\n     * false if not\n     */\n    Accessor.prototype.hasNext = function() {\n        return this.index + 1 < this.data.length;\n    };\n\n    /**\n     * Resets the colletion to restart iteration automatically\n     *\n     * @method restart\n     * @chainable\n     */\n    Accessor.prototype.restart = function() {\n        this.index = -1;\n        return this;\n    };\n\n    /**\n     * Returns the data contained in the accessor\n     *\n     * @method getData\n     * @return {Object} data collection\n     */\n    Accessor.prototype.getData = function() {\n        return this.data;\n    };\n\n    /**\n     * Sets a specific data set to this accessor\n     *\n     * @method setDate\n     * @param {Object} data Data series\n     * @chainable\n     */\n    Accessor.prototype.setData = function(data) {\n        this.data = data;\n        return this;\n    };\n\n    /**\n     * Gets the length of the data set.\n     *\n     * @method getLength\n     * @return {Number} the length of the data\n     */\n    Accessor.prototype.getLength = function() {\n        return this.data.length;\n    };\n\n    return Accessor;\n}));\n","/**\n *\tWhen an event occurs, a defined function will be exectuted.\n *\tThis is for events that don't depende on an specific API.\n *\n *\t@class FunctionEvent\n *\t@constructor\n *\t@requires d3\n *\n *\t@author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/functionevent', [], function() {\n            /**\n             * Export global even in AMD case in case this script\n             * is loaded with others\n             */\n            return factory();\n        });\n    } else {\n        /** Browser globals */\n        root.FunctionEvent = factory();\n    }\n}(this, function() {\n\n    /**\n     * Class constructor\n     *\n     * In the execute function, d represents a specific data element\n     *\n     * @constructor\n     * @param {Object} options = {\n     *                       on : 'click',\n     *                       execute : function (d) {}\n     *                       }\n     */\n    function FunctionEvent(options) {\n\n        this.opts = options;\n    }\n\n    /**\n     * Binds a function to a specific event\n     *\n     * @method bind\n     * @param {d3.selection} target Target to bind event\n     * @chainable\n     */\n    FunctionEvent.prototype.bind = function(target) {\n\n        target.on(this.opts.on, this.opts.execute);\n        return this;\n    };\n\n    return FunctionEvent;\n\n}));\n","/*global $: true*/\n/**\n *\tHooks to specified element a bootstrap feature (for instance, a popover).\n *\tSince data will be handled a specific way, a custom bootstrap event is given in\n *\torder to facilitate instantiation.\n *\n *\tNote : since SVG element won't render contained divs, every element will\n *\tbe added to the 'body' element. This workaround is easier than dealing with\n *\tSVG foreing objects.\n *\n *\tSupported bootstrap features : popovers, tooltips.\n *\n *\t@class BootstrapEvent\n *\t@constructor\n *\t@requires bootstrap,\n *\t\t\t\t\t\tunderscore,\n *\t\t\t\t\t\td3\n *\n *\t@author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n(function(root, factory) {\n    /** Setting up AMD support */\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/bootstrapevent', [\n            'bootstrap',\n            'underscore',\n            'd3'\n        ], function($, _, d3) {\n            /**\n             * Export global even in AMD case in case this script\n             * is loaded with others\n             */\n            return factory($, _, d3);\n        });\n    } else {\n        /** Browser globals */\n        root.BootstrapEvent = factory($, _, d3);\n    }\n}(this, function($, _) {\n\n    /**\n     *\tClass constructor\n     *\n     *\t@constructor\n     *\t@param Object options example = {\n     *\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype : 'popover',\n     *\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplacement: 'left',\n     *\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrigger: 'click',\n     *\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontent : function () {}\n     *\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n     */\n    function BootstrapEvent(options) {\n        this.opts = options;\n    }\n\n    /**\n     * Binds the bootstrap feature to a specified target selection\n     *\n     * @method bind\n     * @param  {d3.selection} target Target selection\n     * @chainable\n     */\n    BootstrapEvent.prototype.bind = function(target) {\n\n        var self = this;\n\n        /**\n         * Traversing d3 structure to allow jquery bootstrap bindings\n         */\n        _.each(target[0], function(element) {\n\n            var d3Element = d3.select(element);\n\n            d3Element.attr('data-toggle', self.opts.type);\n\n            /** Bootstrap popover / tooltip instantiation */\n            $(element)[self.opts.type]({\n                placement: self.opts.placement,\n                trigger: self.opts.trigger,\n                html: true,\n                container: 'body',\n                context: d3Element,\n                content: function() {\n                    return self.opts.content(element);\n                }\n            });\n        });\n\n        return this;\n    };\n\n    return BootstrapEvent;\n}));\n","/*global FunctionEvent: true, BootstrapEvent: true*/\n/**\n *\tEvent factory. Creates instances of predefined events objects.\n *\n *\t@class EventManager\n *\t@constructor\n *\t@requires functionevent,\n *\t\t\t\t\t\tbootstrapevent\n *\n *\t@author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/eventfactory', [\n            'charty/functionevent',\n            'charty/bootstrapevent',\n        ], function(FunctionEvent, BootstrapEvent) {\n            /**\n             * Export global even in AMD case in case this script\n             * is loaded with others\n             */\n            return factory(FunctionEvent, BootstrapEvent);\n        });\n    } else {\n        /** Browser globals */\n        root.EventFactory = factory(FunctionEvent, BootstrapEvent);\n    }\n}(this, function(FunctionEvent, BootstrapEvent) {\n\n    /**\n     *\tClass constructor\n     *\n     * @constructor\n     */\n    function EventFactory() {\n\n    }\n\n    /**\n     *\tCreates a specific Charty event object.\n     *\n     *\t@method\n     *\t@param {Object} e Defined event options\n     *\t@returns {Event} Charty event\n     */\n    EventFactory.prototype.createEvent = function(e) {\n\n        var EventObject = null;\n\n        switch (e.type) {\n            case 'function':\n                EventObject = new FunctionEvent({\n                    on: e.evt,\n                    execute: e.bind\n                });\n                break;\n            case 'bootstrap':\n                EventObject = new BootstrapEvent({\n                    trigger: e.evt,\n                    type: e.element,\n                    content: e.bind,\n                    placement: e.placement\n                });\n                break;\n            default:\n                break;\n        }\n\n        return EventObject;\n    };\n\n    return EventFactory;\n}));\n","/*global FunctionEvent: true, BootstrapEvent: true*/\n/**\n * Event manager. A simple way of adding multiple events to only one target,\n * if necessary.\n *\n * Since d3 works over selections, a \"target\" will represent an element selection,\n * so manager won't be working over only one element, but for the collection itself.\n *\n * @class EventManager\n * @constructor\n * @requires functionevent,\n *\t\t\t\t\t\tbootstrapevent,\n *\t\t\t\t\t\tunderscore\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/eventmanager', [\n            'charty/functionevent',\n            'charty/bootstrapevent',\n            'underscore'\n        ], function(FunctionEvent, BootstrapEvent, _) {\n            /**\n             * Export global even in AMD case in case this script\n             * is loaded with others\n             */\n            return factory(FunctionEvent, BootstrapEvent, _);\n        });\n    } else {\n        /** Browser globals */\n        root.EventManager = factory(FunctionEvent, BootstrapEvent, _);\n    }\n}(this, function(FunctionEvent, BootstrapEvent, _) {\n\n    /**\n     * Class constructor\n     *\n     * @constructor\n     */\n    function EventManager() {\n\n        this.events = [];\n    }\n\n    /**\n     * Adds specific defined event to queue\n     *\n     * @method addEvent\n     * @param {Event} e Charty event to bind\n     * @chainable\n     */\n    EventManager.prototype.addEvent = function(e) {\n\n        this.events.push(e);\n\n        return this;\n    };\n\n    /**\n     * Binds all available events to specified targets.\n     *\n     * Each event wrapper must have a way to bind itself to the specified\n     * elements.\n     *\n     * @method bindAll\n     * @param {d3.selection} t Elements selection\n     * @chainable\n     */\n    EventManager.prototype.bindAll = function(t) {\n        _.each(this.events, function(e) {\n            e.bind(t);\n        });\n\n        return this;\n    };\n\n    return EventManager;\n\n}));\n","\n/*jshint -W074*/\n/*global Accessor: true, EventManager: true, EventFactory: true*/\n/**\n * Sets an interface for adding a link between the chart\n * and the data accessor.\n *\n * Uses an event manager for defining different charty events. Since events\n * need to be present when chart is rendered, for attachment to every SVG node,\n * they should be defined by draw method. This makes an easy way of propagating\n * events to each base rendering class.\n *\n * Note : events are NOT defined in chart init, it can happen that, at this point,\n * events handler are not yet defined or they don't have all necessary data.\n *\n * @class ChartInterface\n * @requires accessor,\n *           eventmanager\n *           eventfactory\n *           underscore\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n(function(root, factory) {\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/chartinterface', [\n                'charty/accessor',\n                'charty/eventmanager',\n                'charty/eventfactory',\n                'underscore'\n            ],\n            function(Accessor, EventManager, EventFactory, _) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(Accessor, EventManager, EventFactory, _);\n            });\n    } else {\n        /** Browser globals */\n        root.ChartInterface = factory(Accessor, EventManager, EventFactory, _);\n    }\n}(this, function(Accessor, EventManager, EventFactory, _) {\n\n    /**\n     * Class constructor\n     *\n     * @constructor\n     * @param {Object} chart d3.chart object\n     * @param {Object} root chart's container\n     * @param {Object} svg svg element that contains the chart\n     * @param {Object} gSvg g element attached to svg\n     * @param {EventFactory} eventFactory Returns instances of Charty events\n     */\n    var ChartInterface = function(chart, rootSelection, svg, gSvg, eventFactory) {\n\n        this.accessor = new Accessor();\n\n        this.chart = chart;\n        this.rootSelection = rootSelection;\n        this.svg = svg;\n        this.gSvg = gSvg;\n        this.eventFactory = eventFactory;\n    };\n\n    /**\n     * Chart dimensioning via interface. Elements internal dimensioning.\n     *\n     * @method setDimensions\n     * @param {Number} width Drawing space width\n     * @param {Number} height Drawing space height\n     * @param {Object} margin margin = {\n     *                        marginleft = 20,\n     *                        margintop = 30,\n     *                        marginright = 20,\n     *                        marginbottom = 30,\n     *                        lfactor = 0.9,\n     *                        tfactor = 0.9\n     *                      }\n     */\n    ChartInterface.prototype.setDimensions = function(margin, width, height) {\n        /** Defaults margin values */\n        var marginValues = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0,\n            lfactor: 1,\n            tfactor: 1\n        };\n\n        /** Values are taken from root element, by parameter or by default */\n        var svgHeight = (height || parseInt(this.rootSelection.style('height'), 10) || 200),\n            svgWidth = (width || parseInt(this.rootSelection.style('width'), 10) || 200);\n\n        /** svg element dimensioning */\n        this.svg.attr('width', svgWidth)\n            .attr('height', svgHeight)\n            .attr('viewBox', ('0 0 ' + svgWidth + \" \" + svgHeight))\n            .attr('preserveAspectRatio', 'xMinYMin');\n\n        if (margin) {\n            marginValues = {\n                left: (margin.marginleft || 0),\n                top: (margin.margintop || 0),\n                right: (margin.marginright || 0),\n                bottom: (margin.marginbottom || 0),\n                lfactor: (margin.marginlfactor || 1),\n                tfactor: (margin.margintfactor || 1)\n            };\n\n            /** Translating g element */\n            this.gSvg.attr('transform', 'translate(' + marginValues.left + ',' + marginValues.top + ')');\n        }\n\n        /** Calculating values according to margin values */\n        svgWidth = (svgWidth - marginValues.right) * marginValues.lfactor;\n        svgHeight = (svgHeight - marginValues.bottom) * marginValues.tfactor;\n\n        /** Propagate value to chart*/\n        this.chart.height(svgHeight)\n            .width(svgWidth);\n    };\n\n    /**\n     * Interface to the chart drawing stage\n     *\n     * @method draw\n     * @param {Object} dataArray Data series contained in one array\n     * @param {Object} eventsArray Events to be attached to data elements\n     * @chainable\n     */\n    ChartInterface.prototype.draw = function(dataArray, eventsArray) {\n\n        var eventManager = new EventManager(),\n            self = this;\n\n        /** Adding events to manager */\n        _.each(eventsArray, function(e) {\n            eventManager.addEvent(self.eventFactory.createEvent(e));\n        });\n\n        /** Sets reference in chart for Event Manager */\n        this.chart.setEventManager(eventManager);\n\n        this.accessor.setData(dataArray);\n        this.chart.draw(this.accessor);\n\n        return this;\n    };\n\n    /**\n     * Chart redimension, without redrawing elements\n     *\n     * @method redimension\n     * @param {Number} height Value can be forced\n     * @param {Number} width Value can be forced\n     * @chainable\n     */\n    ChartInterface.prototype.redimension = function(height, width) {\n\n        var rootHeight = (height || parseInt(this.rootSelection.style('height'), 10)),\n            rootWidth = (width || parseInt(this.rootSelection.style('width'), 10)),\n            svgHeight = (parseInt(this.svg.style('height'), 10)),\n            svgWidth = (parseInt(this.svg.style('width'), 10));\n\n        /** Sets new dimensions and resizing happens */\n        if ((rootHeight !== svgHeight) || (rootWidth !== svgWidth)) {\n\n            this.svg.attr('height', rootHeight);\n            this.svg.attr('width', rootWidth);\n        }\n\n        return this;\n    };\n\n    /**\n     * Sets a background image via css. Class is required\n     *\n     * @method setBackgroundImage\n     * @param {String} imgClass CSS for the background image\n     * @chainable\n     */\n    ChartInterface.prototype.setBackgroundImage = function(imgClass) {\n\n        this.rootSelection.classed(imgClass, true);\n        /** Reference is kept for removing, if necessary */\n        this.imgClass = imgClass;\n\n        return this;\n    };\n\n    /**\n     * Removes class containing background image, if present\n     *\n     * @method removeBackgroundImage\n     * @chainable\n     */\n    ChartInterface.prototype.removeBackgroundImage = function() {\n        this.rootSelection.classed(this.imgClass, false);\n\n        return this;\n    };\n\n    /**\n     * Sets title as a header\n     *\n     * @method setTitle\n     * @param {String} title Chart title\n     * @param {Number} xPosition Position along horizontal axis\n     * @param {Number} yPosition Position along vertical axis\n     * @chainable\n     */\n    ChartInterface.prototype.setTitle = function(title, xPosition, yPosition) {\n\n        this.svg.append('text')\n            .attr('x', xPosition || 0)\n            .attr('y', yPosition || 30)\n            .text(title);\n\n        return this;\n    };\n\n    return ChartInterface;\n}));\n","/*global Charty: true, ScaleFactory: true, ChartInterface: true, DataValidator: true, EventFactory: true*/\n/**\n * Chart instantiation API\n *\n * @class Charty\n * @requires chartynames\n *           scalesfactory\n *           chartinterface\n *           datavalidator\n *           eventfactory\n *           barchart\n *           labeledtrianglechart\n *           linechart\n *           scatterplot\n *           donut\n *           donnutwithinnertext\n *           linechartcircles\n *           groupedbarchart\n *\n * @author \"Marcio Caraballo <marcio.caraballososa@gmail.com>\"\n */\n(function(root, factory) {\n\n    /** Setting up AMD support*/\n    if (typeof define === 'function' && define.amd) {\n        /** AMD */\n        define('charty/charty', [\n                'charty/chartynames',\n                'charty/scalesfactory',\n                'charty/chartinterface',\n                'charty/datavalidator',\n                'charty/eventfactory',\n                'charty/barchart',\n                'charty/labeledtrianglechart',\n                'charty/linechart',\n                'charty/scatterplot',\n                'charty/donut',\n                'charty/donutwithinnertext',\n                'charty/linechartcircles',\n                'charty/groupedbarchart',\n                'charty/winlossbar',\n                'charty/winlosstext',\n                'charty/labeledtext'\n            ],\n            function(Charty, ScaleFactory, ChartInterface, DataValidator, EventFactory) {\n                /** Export global even in AMD case in case this script\n                 * is loaded with others */\n                return factory(Charty, ScaleFactory, ChartInterface, DataValidator, EventFactory);\n            });\n    } else {\n        /** Browser globals */\n        root.Charty = factory(Charty, ScaleFactory, ChartInterface, DataValidator, EventFactory);\n    }\n\n}(this, function(Charty, ScaleFactory, ChartInterface, DataValidator, EventFactory) {\n\n    var scaleFactory = new ScaleFactory(),\n        dataValidator = new DataValidator(),\n        eventFactory = new EventFactory();\n\n    /**\n     * Appends a chart to a root d3.selection element. Chart is determined\n     * by a defined chart name.\n     * Margin is used to translate the chart a small distance. A chart can have many\n     * instances.\n     * Whether the chart takes the container dimensions, is it possible to also set\n     * the dimensions as initial options\n     * Defined events will be spread to every chart's component.\n     *\n     * @method chart\n     * @param {Object} options options = {\n     *                    chartName : 'BarChart',\n     *                    instances : 2,\n     *                    root : 'body',\n     *                    xAxis : 'ordinal',\n     *                    yAxis : 'linear',\n     *                    xScaleDomain : ['Hi', 'I am', 'a fixed', 'domain']\n     *                  }\n     * @return {Object} d3.chart for data drawing\n     */\n    Charty.chart = function(options) {\n\n        if (!options.root || !options.chartName) {\n            throw new Error('Root element or chart name not defined');\n        }\n\n        var selection = d3.select(options.root);\n\n        /**\n         * Svg element creation\n         */\n        var svg = selection.append('svg');\n\n        if (options.gradients) {\n            /** Creation of linear gradients, if defined */\n            var defs = svg.append('defs');\n            /** Possible to define many gradients for one svg element */\n            _.each(options.gradients, function(gradient) {\n                var grad = defs.append('linearGradient');\n                grad.attr('id', gradient.id);\n\n                if (gradient.orientation === 'vertical') {\n                    /** Vertial orientation */\n                    grad.attr('x1', 0)\n                        .attr('x2', 0)\n                        .attr('y1', 0)\n                        .attr('y2', 1);\n                }\n\n                _.each(gradient.classes, function(gradientClass) {\n                    grad.append('stop')\n                        .attr('class', gradientClass.className)\n                        .attr('offset', gradientClass.offset);\n                });\n            });\n        }\n\n        /** Append g to svg */\n        var gSvg = svg.append('g');\n\n        options.dataValidator = dataValidator;\n\n        /**\n         * Appends the chart to the specified html element.\n         */\n        var chart = gSvg.chart(options.chartName, options);\n\n        /**\n         * Scale definition.\n         * Some charts can use direct mapping instead of scaling.\n         */\n        if (options.xAxis) {\n            chart.setXScale(scaleFactory.scale(options.xAxis, 'x'));\n        }\n\n        if (options.yAxis) {\n            chart.setYScale(scaleFactory.scale(options.yAxis, 'y'));\n        }\n\n        /** Grouped bar chart uses another scale */\n        if (options.zAxis) {\n            chart.setZScale(scaleFactory.scale(options.zAxis, 'x'));\n        }\n\n        /** Sets default x domain */\n        if (options.defaultXDomain) {\n            chart.setDefaultXDomain(options.defaultXDomain);\n        }\n\n        /** Sets default y domain */\n        if (options.defaultYDomain) {\n            chart.setDefaultYDomain(options.defaultYDomain);\n        }\n\n        /** Sets default z domain */\n        if (options.defaultZDomain) {\n            chart.setDefaultZDomain(options.defaultZDomain);\n        }\n\n        /**\n         * Returns the interface for the chart drawing\n         *\n         * Interface will manage the events creation.\n         */\n        return new ChartInterface(chart, selection, svg, gSvg, eventFactory);\n    };\n\n    return Charty;\n}));\n"]}